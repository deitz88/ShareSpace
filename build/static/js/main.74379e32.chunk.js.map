{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/PhotoPostContent/PhotoPostContent.jsx","components/WritingPostContent/WritingPostContent.jsx","components/ProfileCard/NonFriendCard.jsx","components/ProfileCard/FriendProfileCard.jsx","components/ProfileCard/RequestPendingCard.jsx","components/ProfileCard/UsersCard.jsx","components/ProfileCard/ProfileCard.jsx","utils/friendService.js","pages/ProfilePage/ProfilePage.jsx","utils/postService.js","components/PhotoPostFeed/PhotoPostFeed.jsx","utils/likesService.js","pages/MainPhoto/MainPhoto.jsx","components/FriendCard/FriendCard.jsx","pages/Friends/Friends.jsx","components/UserCard/UserCard.jsx","pages/Requests/Requests.jsx","pages/AddPost/AddPost.jsx","pages/UpdateProfile/UpdateProfile.jsx","components/NavBar/NavBar.jsx","utils/commentService.js","components/PhotoPostCard/PhotoPostCard.jsx","pages/PhotoPostShow/PhotoPostShow.jsx","pages/AddWriting/AddWriting.jsx","components/WritingCard/WritingCard.jsx","pages/WritingShow/WritingShow.jsx","components/UpdateWritingCard/UpdateWritingCard.jsx","pages/UpdateWriting/UpdateWriting.jsx","components/WritingPostFeed/WritingPostFeed.jsx","pages/MainWriting/MainWriting.jsx","pages/Home/Home.jsx","pages/ErrorPage/ErrorPage.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","body","then","res","ok","json","Error","tokenService","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","Authorization","console","log","SignUpPage","history","useHistory","useState","setError","fileUpload","setFileUpload","password","confirmPassword","email","formInput","setFormInput","handleInput","e","target","name","value","a","key","preventDefault","form","FormData","append","userService","handleSignUpOrLogin","push","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","autoComplete","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","Field","files","Button","id","LoginPage","fluid","size","Message","to","PhotoPostContent","profileUser","posts","length","Card","Group","header","_id","itemsPerRow","map","post","Link","image","photoUrl","WritingPostContent","writings","writing","Content","title","NonFriendCard","userRequest","requestFriend","centered","Icon","onClick","wrapped","ui","Meta","Description","extra","friends","FriendProfileCard","RequestPendingCard","UsersCard","ProfileCard","loggedInUser","friendArray","i","friendRequests","includes","friendRequest","data","denyRequest","approveRequest","removeFriend","ProfilePage","setProfileUser","loading","setLoading","setPosts","userWritings","setUserWritings","useParams","friendService","updatedUser","useEffect","Loader","active","margin","floated","create","createWriting","getAllPhotoPosts","getPost","deleteOne","deleteWriting","getWriting","updateWriting","getAllWritingPosts","PhotoPostFeed","removeLike","addLike","link","likes","liked","findIndex","like","clickHandler","likeColor","likeIcon","avatar","raised","comment","addLikeWriting","removeLikeWriting","addLikeComment","removeLikeComment","MainPhoto","filter","setFilter","clickToggle","getPosts","postService","postId","likesService","likeID","slice","reverse","FriendCard","photo","Row","Friends","friend","UserCard","setTest","text","Requests","request","AddPost","selectedFile","setSelectedFile","input","setInput","formData","minHeight","UpdateProfile","bio","handleChange","Label","disabled","TextArea","NavBar","handleLogout","hover","setHover","clearing","onMouseEnter","onMouseLeave","addWritingComment","writingId","deleteWritingComment","getComment","addPhotoComment","PhotoPostCard","handleCommentSubmit","commentsAndUsers","toggleDropdown","dropdown","menu","handleDeleteComment","setShow","show","changeShow","clickHandlerComment","commentService","likedComment","iconName","postUser","commentsAndUser","floating","PhotoPostShow","setPost","setCommentsAndUsers","setDropdown","setMenu","setComment","retrievedPost","commentId","AddWriting","content","WritingCard","writingUser","WritingShow","setWriting","retrievedWriting","UpdateWritingCard","handleSubmit","test","UpdateWriting","WritingPostFeed","MainWriting","setWritings","getWritings","Home","toggle","setToggle","open","setOpen","Modal","closeIcon","onClose","onOpen","ErrorPage","App","setUser","location","useLocation","pathname","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.74379e32.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken,\n};\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/users/\";\nfunction signup(user) {\n  return fetch(BASE_URL + \"signup\", {\n    method: \"POST\",\n    body: user,\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(\"Email already taken!\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\nfunction getProfile(username) {\n  return fetch(BASE_URL + username, {\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      console.log(res)\n      throw new Error(\"Bad Credentials\");\n    }\n  });\n}\n\n// function UpdateProfile(info) {\n//   console.log(info) //this is working, req.body == {} on backend\n//   return fetch(BASE_URL + `update/${info.user._id}`, {\n//     method: \"POST\",\n//     headers: { Authorization: \"Bearer \" + tokenService.getToken() \n//   },\n//     body: JSON.stringify(info),\n//   }).then((res) => {\n//     if (res.ok) return res.json();\n//     throw new Error(\"error updating profile\");\n//   });\n// }\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n    .then((res) => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error(\"Bad Credentials!\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  logout,\n  login,\n  getUser,\n  getProfile,\n  // UpdateProfile,\n};\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Grid, Header, Image, Form, Segment, Button } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./SignupPage.css\";\n\nexport default function SignUpPage(props) {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(\"\");\n  const [formInput, setFormInput] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    email: \"\",\n  });\n\n  function handleInput(e) {\n    setFormInput({\n      ...formInput,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function handleFileUpload(e) {\n    setFileUpload(e.target.files[0]);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const form = new FormData();\n    form.append(\"photo\", fileUpload);\n\n    for (let key in formInput) {\n      form.append(key, formInput[key]);\n    }\n\n    try {\n      await userService.signup(form);\n      props.handleSignUpOrLogin();\n      history.push(\"/mainphoto\");\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }} className=\"signupForm\">\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image\n              className=\"signupLogo\"\n              src=\"https://i.imgur.com/zWf0THW.png\"\n            />{\" \"}\n            <span className=\"signupText\">Sign Up </span>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked className=\"signupForm\">\n              <Form.Input\n                name=\"username\"\n                placeholder=\"username\"\n                value={formInput.username}\n                onChange={handleInput}\n                required\n              />\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={formInput.email}\n                onChange={handleInput}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={formInput.password}\n                onChange={handleInput}\n                required\n              />\n              <Form.Input\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={formInput.confirmPassword}\n                onChange={handleInput}\n                required\n              />\n              <Form.Field className=\"signupForm\">\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileUpload}\n                  required\n                />\n              </Form.Field>\n              <Button type=\"submit\" className=\"btn\" id=\"signupButton\">\n                Signup\n              </Button>\n            </Segment>\n            {error ? <ErrorMessage error={error} /> : null}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport {\n  Grid,\n  Form,\n  Header,\n  Button,\n  Message,\n  Image,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n  const [formInput, setFormInput] = useState({\n    password: \"\",\n    email: \"\",\n  });\n  function handleInput(e) {\n    setFormInput({\n      ...formInput,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(formInput);\n      props.handleSignUpOrLogin();\n      history.push(\"/mainphoto\");\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" textAlign=\"center\">\n            <Image\n              className=\"signupLogo\"\n              src=\"https://i.imgur.com/zWf0THW.png\"\n            />\n            <span className=\"signupText\">Login to Share Space </span>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={formInput.email}\n                onChange={handleInput}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={formInput.password}\n                onChange={handleInput}\n                required\n              />\n              <Button\n                color=\"teal\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n                id=\"signupButton\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <span className=\"btmText\">New to Share Space? </span>\n            <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {Card } from 'semantic-ui-react'\nimport './PhotoPostContent.css'\n\nexport default function PhotoPostContent({user, profileUser, posts, error}){\n    if(error){\n        return(\n            <h1>error!</h1>\n        )\n    } else {\n    \n    if(!posts.length){\n        return(\n            <>\n            <br></br>\n            <br></br>\n        <Card.Group className='headerCard'>\n                <Card fluid header={\n                    user._id === profileUser._id \n                    ?'Your Posts'\n                    :profileUser.username +\"'s Posts\"}/>\n        </Card.Group>\n        <br>\n        </br>\n         <h4 className='noPosts'>This user hasnt uploaded anyting yet!</h4>\n         </>\n        )\n    } else {\n    return(\n        <>\n        <br></br>\n        <br></br>\n    <Card.Group className='headerCard'>\n            <Card fluid header={\n                    user._id === profileUser._id \n                    ?'Your Posts'\n                    :profileUser.username +\"'s Posts\"}/>\n    </Card.Group>\n    <br>\n    </br>\n        <Card.Group itemsPerRow={3}>\n            {posts.map((post) => {\n                return ( \n                    <Card as={Link} image={post.photoUrl} key={post._id} to={'show/' + post._id}/>\n                )}\n                )}\n            </Card.Group>\n            </>\n    )\n\n    }\n}\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"semantic-ui-react\";\nimport \"./WritingPostContent.css\";\n\nexport default function WritingPostContent({\n  user,\n  profileUser,\n  writings,\n  error,\n}) {\n  if (error) {\n    return <h1>error!</h1>;\n  } else {\n    if (!writings.length) {\n      return (\n        <>\n          <br></br>\n          <br></br>\n          <Card.Group className=\"headerCard\">\n            <Card\n              fluid\n              header={\n                user._id === profileUser._id\n                  ? \"Your Writings\"\n                  : profileUser.username + \"'s Writings\"\n              }\n            />\n          </Card.Group>\n          <br></br>\n          <h4 className=\"noPosts\">No Writings Yet...</h4>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <br></br>\n          <br></br>\n          <Card.Group className=\"headerCard\">\n            <Card\n              fluid\n              header={\n                user._id === profileUser._id\n                  ? \"Your Writings\"\n                  : profileUser.username + \"'s Writings\"\n              }\n            />\n          </Card.Group>\n          <br></br>\n          <Card.Group itemsPerRow={3}>\n            {writings.map((writing) => {\n              return (\n                <Card\n                  className=\"titleCard\"\n                  as={Link}\n                  key={writing._id}\n                  to={\"writing/\" + writing._id}\n                >\n                  <Card.Content>\n                    <h4>{writing.title}</h4>\n                  </Card.Content>\n                </Card>\n              );\n            })}\n          </Card.Group>\n        </>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport \"./ProfileCard.css\";\n\nexport default function NonFriendCard({ userRequest, requestFriend, posts, writings }) {\n  const clickHandler = () => requestFriend(userRequest);\n\n  return (\n    <Card centered className=\"profileCard\">\n      <Card.Group className=\"headerCardOther\">\n        <Card fluid header={userRequest.username} />\n        <div className=\"iconTextNon\">\n          <h5 className=\"firstRowText\">Add</h5>\n          <h5 className=\"secondRowText\">Friend</h5>\n        </div>\n        <Link to={\"/\" + userRequest.username}>\n          <Icon\n            className=\"settingIcon\"\n            name=\"add user\"\n            size=\"large\"\n            onClick={clickHandler}\n          />\n        </Link>\n      </Card.Group>\n      <Image src={userRequest.photoUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <h2 className=\"bioHeader\">Bio:</h2>\n        </Card.Header>\n        <Card.Meta></Card.Meta>\n        <Card.Description></Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        \n        <a>\n          Friends: &nbsp;&nbsp;\n          <Icon name=\"user\" />\n          {userRequest.friends.length ? userRequest.friends.length : 0}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Posts: &nbsp;\n          {posts.length ? posts.length : \"None\"}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Writings: &nbsp;\n          {writings.length ? writings.length : \"None\"}\n        </a>\n      </Card.Content>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport \"./ProfileCard.css\";\n\nexport default function FriendProfileCard({ userRequest, posts, writings }) {\n  return (\n    <Card centered className=\"profileCard\">\n      <Card.Group className=\"headerCardOther\">\n        <Card fluid header={userRequest.username} />\n        <div className=\"iconTextNon\">\n          <h5 className=\"firstRowText\">You're</h5>\n          <h5 className=\"secondRowText\">Friends!</h5>\n        </div>\n\n        <Icon className=\"settingIcon\" name=\"smile outline\" size=\"large\" />\n      </Card.Group>\n      <Image src={userRequest.photoUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <h2 className=\"bioHeader\">Bio:</h2>\n        </Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n        <a>\n          Friends: &nbsp;&nbsp;\n          <Icon name=\"user\" />\n          {userRequest.friends.length ? userRequest.friends.length : 0}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Posts: &nbsp;\n          {posts.length ? posts.length : \"None\"}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Writings: &nbsp;\n          {writings.length ? writings.length : \"None\"}\n        </a>\n      </Card.Content>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport \"./ProfileCard.css\";\n\nexport default function RequestPendingCard({ userRequest, posts, writings }) {\n  return (\n    <Card centered className=\"profileCard\">\n      <Card.Group className=\"headerCardOtherRequest\">\n        <Card fluid header={userRequest.username} />\n        <div className=\"iconText\">\n          <h5 className=\"firstRowText\">Request</h5>\n          <h5 className=\"secondRowText\">Pending</h5>\n        </div>\n        <Icon className=\"settingIcon\" name=\"wait\" size=\"large\" />\n      </Card.Group>\n      <Image src={userRequest.photoUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <h2 className=\"bioHeader\">Bio:</h2>\n        </Card.Header>\n        <Card.Meta>\n          {/* <span className='date'>Joined in 2015</span> */}\n        </Card.Meta>\n        <Card.Description>\n          {/* <Segment>\n                        Bio:\n                    </Segment> */}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <a>\n          Friends: &nbsp;&nbsp;\n          <Icon name=\"user\" />\n          {userRequest.friends.length ? userRequest.friends.length : 0}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Posts: &nbsp;\n          {posts.length ? posts.length : \"None\"}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Writings: &nbsp;\n          {writings.length ? writings.length : \"None\"}\n        </a>\n      </Card.Content>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport \"./ProfileCard.css\";\n\nexport default function UsersCard({ userRequest, posts, writings }) {\n  console.log(userRequest);\n  return (\n    <Card centered className=\"profileCard\">\n      <Card.Group className=\"headerCard\">\n        <Card fluid header={userRequest.username} id=\"usernameHeader\" />\n        {/* <Link to=\"/update\">\n          <Icon className=\"settingIcon\" name=\"setting\" size=\"large\" />\n        </Link> */} \n        <br />  {/* remove this once update works*/}\n      </Card.Group>\n      <Image src={userRequest.photoUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <h2 className=\"bioHeader\">Bio:</h2>\n        </Card.Header>\n        <Card.Meta>\n          {/* <span className='date'>Joined in 2015</span> */}\n        </Card.Meta>\n        <Card.Description>\n          {/* <Segment>\n                        Bio:\n                    </Segment> */}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Link to=\"/friends\">\n          Friends: &nbsp;\n          <Icon name=\"user\" />\n          {userRequest.friends.length ? userRequest.friends.length : 0}\n        </Link>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Posts: &nbsp;\n          {posts.length ? posts.length : \"None\"}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Writings: &nbsp;\n          {writings.length ? writings.length : \"None\"}\n        </a>\n      </Card.Content>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./ProfileCard.css\";\nimport NonFriendCard from \"./NonFriendCard\";\nimport FriendProfileCard from \"./FriendProfileCard\";\nimport RequestPendingCard from \"./RequestPendingCard\";\nimport UsersCard from \"./UsersCard\";\n\nexport default function ProfileCard({\n  userRequest,\n  loggedInUser,\n  requestFriend,\n  posts,\n  writings,\n}) {\n  let friendArray = [];\n  for (let i = 0; i < loggedInUser.friendRequests.length; i++) {\n    friendArray.push(loggedInUser.friendRequests[i]._id);\n  }\n  if (userRequest._id === loggedInUser._id) {\n    return (\n      <UsersCard\n        userRequest={userRequest}\n        loggedInUser={loggedInUser}\n        requestFriend={requestFriend}\n        posts={posts}\n        writings={writings}\n      />\n    );\n  } else if (\n    userRequest.friendRequests.includes(loggedInUser._id) ||\n    friendArray.includes(userRequest._id)\n  ) {\n    return (\n      <RequestPendingCard\n        userRequest={userRequest}\n        posts={posts}\n        writings={writings}\n      />\n    );\n  } else if (userRequest.friends.includes(loggedInUser._id)) {\n    return (\n      <FriendProfileCard\n        loggedInUser={loggedInUser}\n        userRequest={userRequest}\n        posts={posts}\n        writings={writings}\n      />\n    );\n  } else if (!userRequest.friendRequests.includes(loggedInUser._id)) {\n    return (\n      <NonFriendCard\n        userRequest={userRequest}\n        requestFriend={requestFriend}\n        posts={posts}\n        writings={writings}\n      />\n    );\n  }\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/friends/\";\n\nfunction friendRequest(userRequest, user) {\n  return fetch(BASE_URL + `request/${userRequest._id}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error adding friend\");\n    })\n    .then((data) => data);\n}\n\nfunction denyRequest(username) {\n  return fetch(BASE_URL + `deny/${username}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error denying request\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nfunction approveRequest(username) {\n  return fetch(BASE_URL + `approve/${username}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error accepting friend\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nfunction removeFriend(username) {\n  return fetch(BASE_URL + `remove/${username}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error removing friend\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  friendRequest,\n  denyRequest,\n  approveRequest,\n  removeFriend,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./ProfilePage.css\";\nimport userService from \"../../utils/userService\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Card, Header, Loader } from \"semantic-ui-react\";\nimport PhotoPostContent from \"../../components/PhotoPostContent/PhotoPostContent\";\nimport WritingPostContent from \"../../components/WritingPostContent/WritingPostContent\";\nimport ProfileCard from \"../../components/ProfileCard/ProfileCard\";\nimport friendService from \"../../utils/friendService\";\n\nexport default function ProfilePage({ user, handleSignUpOrLogin }) {\n  const history = useHistory();\n  const [profileUser, setProfileUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [userWritings, setUserWritings] = useState([]);\n\n  const { username } = useParams();\n\n  async function getProfile() {\n    try {\n      const data = await userService.getProfile(username);\n      setProfileUser(() => data.user);\n      setPosts(() => data.posts);\n      setLoading(false);\n      setUserWritings(() => data.writings);\n    } catch (err) {\n      setError(\n        \"The Profile You Are Looking For Does Not Exist - Please Check Spelling And/Or Casing\"\n      );\n    }\n  }\n\n  async function requestFriend(userRequest) {\n    const updatedUser = await friendService.friendRequest(userRequest);\n    setProfileUser(updatedUser);\n  }\n\n  useEffect(() => {\n    getProfile();\n  }, [username]);\n\n  if (error) {\n    history.push('/404')\n    return (<h1>{error}</h1>);\n  }\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n    return (\n      <>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: \"100vh\"}, {margin: '20px'}}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header floated=\"right\">\n              {/* <Link to=\"/main\"><Icon name=\"setting\" floated=\"right\" size='large'></Icon></Link> */}\n            </Header>\n            <ProfileCard\n              userRequest={profileUser}\n              loggedInUser={user}\n              requestFriend={requestFriend}\n              posts={posts}\n              writings={userWritings}\n            />\n            <Card centered className=\"profileCard\">\n              <PhotoPostContent\n                error={error}\n                user={user}\n                profileUser={profileUser}\n                posts={posts}\n              />\n            </Card>\n            <Card centered className=\"profileCard\">\n              <WritingPostContent\n                user={user}\n                profileUser={profileUser}\n                writings={userWritings}\n              />\n            </Card>\n          </Grid.Column>\n        </Grid>\n      </>\n    );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/posts/\";\n\nfunction create(post) {\n  return fetch(BASE_URL + \"create\", {\n    method: \"POST\",\n    body: post,\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction createWriting(writing) {\n  return fetch(BASE_URL + \"createwriting\", {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(writing),\n  }).then((res) => res.json());\n}\n\nfunction getAllPhotoPosts() {\n  return fetch(BASE_URL + \"mainphoto/\", {\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction getAllWritingPosts() {\n  return fetch(BASE_URL + \"mainwriting/\", {\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction getPost(id) {\n  return fetch(BASE_URL + \"show/\" + id, {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction getWriting(id) {\n  return fetch(BASE_URL + \"writing/\" + id, {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction deleteOne(id) {\n  return fetch(BASE_URL + \"delete/\" + id, {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction deleteWriting(id) {\n  return fetch(BASE_URL + \"deletewriting/\" + id, {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction updateWriting(writing) {\n  return fetch(BASE_URL + \"updatewriting/\" + writing.id, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(writing),\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error adding friend\");\n    })\n    .then((data) => data);\n}\n\nexport default {\n  create,\n  createWriting,\n  getAllPhotoPosts,\n  getPost,\n  deleteOne,\n  deleteWriting,\n  getWriting,\n  updateWriting,\n  getAllWritingPosts,\n};\n","import React from \"react\";\nimport { Grid, Card, Header, Image, Segment, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport './PhotoPostFeed.css'\n\nexport default function PhotoPostFeed({ post, removeLike, addLike, user }) {\n    const link = Link\n    const likes = post.likes\n    const liked = post.likes.findIndex(like => like.username === user.username)\n    const clickHandler = liked > -1 ? () => removeLike(post.likes[liked]._id) : () => addLike(post._id)\n    const likeColor = liked > -1 ? 'red' : 'grey'\n    const likeIcon = liked > -1 ? \"heart\" : \"heart outline\"\n  return (\n    <Card style={{ height: 'fit-content'}}> \n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Card centered className=\"profileCard\">\n          <Card fluid id=\"usernameHeader\">\n            <Header as=\"h2\" className=\"postUsername\" floated=\"right\">\n              {post.user.username}\n              <Link to={\"/\" + post.user.username}>\n                <Image\n                  className=\"postAvatar\"\n                  src={post.user.photoUrl}\n                  avatar\n                  size=\"large\"\n                  floated=\"left\"\n                ></Image>\n              </Link>\n            </Header>\n          </Card>\n          <Card as={link} to={'show/' + post._id} centered raised image={post.photoUrl} size=\"medium\" />\n                <div className='goToContainer'>\n                <h6>go to post to see comments</h6>\n                </div>\n          <Card.Content>\n         \n            <Card.Description>\n              <Segment>\n                {post.comment}\n              </Segment>\n              <Icon className=\"like\" name={likeIcon} color={likeColor} onClick={clickHandler}>{likes.length ? likes.length : ''}</Icon>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n       {/* <Segment> */}\n\n            {/* </Segment> */}\n      </Grid.Column>\n    </Card>\n  );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/\";\n\nfunction addLike(id) {\n  return fetch(`${BASE_URL}posts/${id}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error liking Post\");\n  });\n}\n\nfunction addLikeWriting(id) {\n  return fetch(`${BASE_URL}writings/${id}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error liking Post\");\n  });\n}\nfunction addLikeComment(id) {\n  return fetch(`${BASE_URL}comments/${id}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error liking Post\");\n  });\n}\n\nfunction removeLike(id) {\n  return fetch(`${BASE_URL}likes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error removing like Post\");\n  });\n}\n\nfunction removeLikeWriting(id) {\n  return fetch(`${BASE_URL}writinglikes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error removing like Post\");\n  });\n}\n\nfunction removeLikeComment(id) {\n  return fetch(`${BASE_URL}commentlikes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error removing like from commnent\");\n  });\n}\n\nexport default {\n  addLike,\n  removeLike,\n  addLikeWriting,\n  removeLikeWriting,\n  addLikeComment,\n  removeLikeComment,\n};\n","import React, { useState, useEffect } from \"react\";\nimport postService from \"../../utils/postService\";\nimport {\n  Grid,\n  Card,\n  Button,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"./MainPhoto.css\";\nimport PhotoPostFeed from \"../../components/PhotoPostFeed/PhotoPostFeed\";\nimport likesService from \"../../utils/likesService\";\n\nexport default function MainPhoto({ user }) {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState(true);\n\n  function clickToggle(e) {\n    e.preventDefault();\n    setFilter(!filter);\n  }\n\n  async function getPosts() {\n    const data = await postService.getAllPhotoPosts();\n    setPosts([...data.posts]);\n  }\n  async function addLike(postId) {\n    try {\n      await likesService.addLike(postId);\n      getPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeLike(likeID) {\n    try {\n      await likesService.removeLike(likeID);\n      getPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  if (posts.length < 1) {\n    return (\n      <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\"}, {margin: '20px'}}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <br></br>\n        <br></br>\n        <Card.Group className=\"headerCard\">\n          <Card fluid header=\"Browse Posts:\" />\n          <Button className='toggleButton' id='signupButton' onClick={clickToggle}>{filter === true ? 'showing recent' : 'showing oldest'}</Button>\n\n        </Card.Group>\n        <Segment>\n          No Posts Yet\n        </Segment>\n        </Grid.Column>\n        </Grid>\n    );\n  } else {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\"}, {margin: '20px'}}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <br></br>\n          <br></br>\n          <Card.Group className=\"headerCard\">\n            <Card fluid header=\"Browse Posts:\" />\n            <Button\n              className=\"toggleButton\"\n              id=\"signupButton\"\n              onClick={clickToggle}\n            >\n              {filter === true ? \"showing recent\" : \"showing oldest\"}\n            </Button>\n          </Card.Group>\n          <br></br>\n          <Card.Group itemsPerRow={2} style={{ height: 'fit-content'}}>\n            {/* post.sort({}) */}\n            {filter === true ? (\n              <>\n                {posts.slice(0).reverse().map((post) => {\n                  return (\n                    <PhotoPostFeed\n                      key={post._id}\n                      post={post}\n                      addLike={addLike}\n                      removeLike={removeLike}\n                      user={user}\n                    />\n                  );\n                })}\n              </>\n            ) : (\n              <>\n                {posts.map((post) => {\n                  return (\n                    <PhotoPostFeed\n                      key={post._id}\n                      post={post}\n                      addLike={addLike}\n                      removeLike={removeLike}\n                      user={user}\n                    />\n                  );\n                })}\n              </>\n            )}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Grid } from \"semantic-ui-react\";\nimport \"./FriendCard.css\";\nimport friendService from \"../../utils/friendService\";\n\nexport default function FriendCard({ username, photo, handleSignUpOrLogin }) {\n  async function handleRemove(e) {\n    e.preventDefault();\n    await friendService.removeFriend(username);\n    handleSignUpOrLogin();\n  }\n  useEffect(() => {}, []);\n  return (\n    <>\n      <Card.Group className=\"headerCard\">\n        &nbsp; &nbsp; &nbsp;\n        <Card.Content>\n          {username}\n          <Card.Header textAlign=\"center\"></Card.Header>\n          <Link to={username}>\n            <Image src={photo} avatar />\n          </Link>\n          <Card.Meta>\n            {/* <span className='date'>Joined in 2015</span> */}\n          </Card.Meta>\n          <Card.Description>\n            {/* <Segment>\n                            Bio:\n                        </Segment> */}\n          </Card.Description>\n        </Card.Content>\n        <Grid.Row>\n          {/* <br /> */}\n          {/* <h3 className='userCardText'>&nbsp;&nbsp;&nbsp;accept or deny buttons here\n            </h3> */}\n          <br />\n          <br />\n          <div className=\"buttonCont\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <input\n              type=\"button\"\n              value=\"Unfriend\"\n              className=\"btn\"\n              id=\"denyButton\"\n              // floated='right'\n              // textAlign='right'\n              onClick={handleRemove}\n            ></input>\n          </div>\n        </Grid.Row>\n      </Card.Group>\n      <br></br>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport FriendCard from \"../../components/FriendCard/FriendCard\";\nimport { Card, Grid, Header } from \"semantic-ui-react\";\nimport \"./Friends.css\";\n\nexport default function Friends({ user, handleSignUpOrLogin }) {\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={({ height: \"100vh\" }, { margin: \"20px\" })}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"friendCard\">\n            <h1 className=\"requestsHeader\">Friends List</h1>\n          </Card>\n          {user.friends.length ? \"\" : <Header>No Requests Yet</Header>}\n          {user.friends.map((friend) => {\n            return (\n              <FriendCard\n                username={friend.username}\n                photo={friend.photoUrl}\n                key={friend._id}\n                handleSignUpOrLogin={handleSignUpOrLogin}\n                user={user}\n              />\n            );\n          })}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Grid } from \"semantic-ui-react\";\nimport \"./UserCard.css\";\nimport friendService from \"../../utils/friendService\";\n\nexport default function UserCard({\n  username,\n  user,\n  photo,\n  handleSignUpOrLogin,\n}) {\n  const [test, setTest] = useState({});\n  async function handleDeny(e) {\n    e.preventDefault();\n    await friendService.denyRequest(username);\n    handleSignUpOrLogin();\n  }\n\n  async function handleAccept(e) {\n    e.preventDefault();\n    await friendService.approveRequest(username);\n    await handleSignUpOrLogin();\n    setTest(user);\n  }\n\n  return (\n    <>\n      <br></br>\n      <br></br>\n      <Card.Group className=\"headerCard\">\n        <Card.Content text=\"test\">\n          {username}\n          <Card.Header></Card.Header>\n          <Link to={username}>\n            <Image src={photo} avatar />\n          </Link>\n          <Card.Meta>\n            {/* <span className='date'>Joined in 2015</span> */}\n          </Card.Meta>\n          <Card.Description>\n            {/* <Segment>\n                            Bio:\n                        </Segment> */}\n          </Card.Description>\n        </Card.Content>\n        <Grid.Row>\n          <br />\n          <br />\n          <div className='buttonCont'>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;\n            &nbsp;\n            <input\n              type=\"button\"\n              value=\"Accept\"\n              className=\"btn\"\n              id=\"acceptButton\"\n              onClick={handleAccept}\n            ></input>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;\n            <input\n              type=\"button\"\n              value=\"Deny\"\n              className=\"btn\"\n              id=\"denyButton\"\n              onClick={handleDeny}\n            ></input>\n          </div>\n        </Grid.Row>\n      </Card.Group>\n      <br></br>\n    </>\n  );\n}\n","import React from \"react\";\nimport UserCard from \"../../components/UserCard/UserCard\";\nimport { Card, Grid, Header } from \"semantic-ui-react\";\nimport \"./Requests.css\";\n\nexport default function Requests({ user, handleSignUpOrLogin }) {\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\"}, {margin: '20px'}}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">Pending Requests</h1>\n          </Card>\n          {user.friendRequests.length ? '' : <Header>No Requests Yet</Header>}\n          {user.friendRequests.map((request) => {\n            return (\n              <UserCard\n                username={request.username}\n                photo={request.photoUrl}\n                key={request._id}\n                handleSignUpOrLogin={handleSignUpOrLogin}\n                user={user}\n              />\n            );\n          })}\n        </Grid.Column>\n\n        {/* </Grid> */}\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Form, Grid, Segment, Card } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport \"./AddPost.css\";\n\nexport default function AddPost({ user }) {\n  const history = useHistory();\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [input, setInput] = useState({\n    comment: \"\",\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n    formData.append(\"comment\", input.comment);\n    await postService.create(formData);\n    history.push(`/${user.username}`);\n  }\n\n  function handleFileInput(e) {\n    setSelectedFile(e.target.files[0]);\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={({ height: \"100vh\" }, { margin: \"20px\" })}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">New Photo Post</h1>\n          </Card>\n          <Segment>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.Input\n                className=\"form-control\"\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n                required\n              />\n              <Form.Input\n                style={{ minHeight: 100 }}\n                className=\"form-control\"\n                name=\"comment\"\n                value={input.comment}\n                placeholder=\"add comment\"\n                onChange={handleChange}\n                required\n              />\n              <Button type=\"submit\" className=\"btn\" id=\"addButton\">\n                Create Post\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport {\n  Grid,\n  Header,\n  Image,\n  Form,\n  Segment,\n  Button,\n  Label,\n  Card,\n} from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./UpdateProfile.css\";\n\nexport default function UpdateProfile({ user }) {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(\"\");\n  const [formInput, setFormInput] = useState({\n    username: `${user.username}`,\n    bio: `${user.bio}`,\n    user: user,\n    photoUrl: user.photoUrl\n  });\n\n  useEffect(() => {\n    test();\n  }, []);\n\n  function test() {\n    setFormInput({\n      username: user.username,\n      bio: user.bio,\n      user: user,\n    });\n  }\n\n  // function handleInput(e) {\n  //   setFormInput({\n  //     ...formInput,\n  //     [e.target.name]: e.target.value,\n  //   });\n  // }\n  function handleChange(e) {\n    setFormInput({\n      ...formInput,\n      [e.target.name]: e.target.value,\n    });\n  }\nconsole.log(fileUpload)\n  function handleFileUpload(e) {\n    setFileUpload(e.target.files[0]);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    userService.UpdateProfile(formInput)\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }} className=\"signupForm\">\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image className=\"signupLogo\" />{\" \"}\n            <span className=\"updateText\">Profile Update</span>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked className=\"signupForm\">\n              <Label>Username: {user.username}</Label>\n              <br />\n              <br />\n\n              <Form.Input\n                type=\"username\"\n                name=\"username\"\n                value='username is unique and cannot be changed at this time'\n                onChange={handleChange}\n                required\n                disabled\n              />\n\n              <Label>Bio:</Label>\n              <br />\n              <br />\n              <Form.Field className=\"signupForm\">\n                <Form.TextArea\n                  type=\"bio\"\n                  name=\"bio\"\n                  value={formInput.bio}\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Field>\n              <Label>Profile Photo:</Label>\n              <br />\n              <Card raised centered image={user.photoUrl} />\n              <Form.Field className=\"signupForm\">\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileUpload}\n                />\n              </Form.Field>\n              <Button type=\"submit\" className=\"btn\" id=\"signupButton\">\n                Update\n              </Button>\n            </Segment>\n            {error ? <ErrorMessage error={error} /> : null}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import \"./NavBar.css\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Icon, Image } from \"semantic-ui-react\";\n\nexport default function NavBar({ user, handleSignUpOrLogin, handleLogout }) {\n  const [hover, setHover] = useState('');\n  \n \n  return user ? (\n    <Segment clearing className='navContainer'>\n      <Header as=\"h2\" floated=\"right\">\n        <Link to=\"/mainphoto\">\n          <Icon name=\"camera retro\" onMouseEnter={()=>setHover('mainPhoto')} onMouseLeave={()=>setHover('')}></Icon>\n        </Link>\n        {hover === 'mainPhoto' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='mainPhoto'>Post Feed</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/mainwriting\" onMouseEnter={()=>setHover('mainWriting')} onMouseLeave={()=>setHover('')}>\n          <Icon name=\"copy\"></Icon>\n        </Link>\n        {hover === 'mainWriting' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='mainWriting'>Writing Feed</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/notifications\">\n          {/* <Icon name=\"bell\">\n                            <div className='notificationNumberContainer'>\n                            <span className='notificationNumber'>7</span>\n                            </div>\n                        </Icon> */}\n        </Link>\n        <Link to=\"/requests\">\n          <Icon name=\"wait\" onMouseEnter={()=>setHover('requests')} onMouseLeave={()=>setHover('')}>\n            <div className=\"requestNumberContainer\">\n              <span className=\"requestNumber\">\n                {user.friendRequests.length ? user.friendRequests.length : \"\"}\n              </span>\n            </div>\n          </Icon>\n        </Link>\n        {hover === 'requests' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='requests'>Requests</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/friends\">\n          <Icon name=\"handshake\" onMouseEnter={()=>setHover('friends')} onMouseLeave={()=>setHover('')}>\n            <div className=\"friendNumberContainer\">\n              <span className=\"friendNumber\">\n                {user.friends.length ? user.friends.length : \"\"}\n              </span>\n            </div>\n          </Icon>\n        </Link>\n        {hover === 'friends' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='friends'>Friends</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to={\"/\" + user.username} onMouseEnter={()=>setHover('profile')} onMouseLeave={()=>setHover('')} onClick={handleSignUpOrLogin}>\n          <Icon name=\"user circle outline\"></Icon>\n        </Link>\n        {hover === 'profile' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='profile'>Profile</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/addpost\" onMouseEnter={()=>setHover('post')} onMouseLeave={()=>setHover('')}>\n          <Icon name=\"plus square outline\" ></Icon>\n        </Link>\n        {hover === 'post' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='post'>Add Post</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/addwriting\" onMouseEnter={()=>setHover('writing')} onMouseLeave={()=>setHover('')}>\n          <Icon name=\"pencil alternate\">\n          <div className=\"writingSymbolContainer\">\n              <span className=\"writingSymbol\">\n                +\n              </span>\n            </div>\n          </Icon>\n        </Link> \n        {hover === 'writing' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='writing'>Add Writing</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"\" onClick={handleLogout}>\n          <span className=\"logoutText\">Logout</span>\n        </Link>\n      </Header>\n      <Header as=\"h2\" floated=\"left\">\n        <Link to=\"/\">\n          <Image\n            className=\"headerLogo\"\n            src=\"https://i.imgur.com/zWf0THW.png\"\n            size=\"mini\"\n          ></Image>\n        </Link>\n      </Header>\n    </Segment>\n  ) : (\n    <Segment clearing className='navContainer'>\n      <Header as=\"h2\" floated=\"left\">\n        <Link to=\"/\">\n          <Image\n            className=\"headerLogo\"\n            src=\"https://i.imgur.com/zWf0THW.png\"\n            size=\"mini\"\n          ></Image>\n        </Link>\n      </Header>\n      <Header as=\"h2\" floated=\"right\">\n        <Link to=\"/login\">\n          <span className=\"logoutText\">Login</span>\n        </Link>\n      </Header>\n    </Segment>\n  );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/comments/\";\n\nfunction addWritingComment(input) {\n  return fetch(`${BASE_URL}writing/${input.writingId}/addcomment`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(input),\n  }).then((res) => res.json());\n}\n\nfunction addPhotoComment(input) {\n  return fetch(`${BASE_URL}post/${input.postId}/addcomment`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(input),\n  }).then((res) => res.json());\n}\n\n// function deletePostComment(id) {\n//   return fetch(`${BASE_URL}delete/` + id, {\n//     method: \"GET\",\n//     headers: {\n//       Authorization: \"Bearer \" + tokenService.getToken(),\n//     },\n//   }).then((res) => res.json());\n// }\n\nfunction deleteWritingComment(id) {\n  return fetch(`${BASE_URL}delete/` + id, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => res.json());\n}\n\nfunction getComment(id) {\n  return fetch(`${BASE_URL}comment/` + id, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => res.json());\n}\n\nexport default {\n  addWritingComment,\n  deleteWritingComment,\n  getComment,\n  addPhotoComment,\n};\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport {\n  Card,\n  Grid,\n  Segment,\n  Icon,\n  Image,\n  Header,\n  Button,\n  Form,\n  Message,\n  Divider,\n} from \"semantic-ui-react\";\nimport \"./PhotoPostCard.css\";\nimport commentService from \"../../utils/commentService\";\n\nexport default function PhotoPostCard({\n  post,\n  user,\n  addLike,\n  removeLike,\n  handleChange,\n  handleCommentSubmit,\n  commentsAndUsers,\n  toggleDropdown,\n  dropdown,\n  addLikeComment,\n  removeLikeComment,\n  menu,\n  comment,\n  handleDeleteComment,\n  setShow,\n  show,\n}) {\n  const history = useHistory();\n  const likes = post.post.likes;\n  const liked = post.post.likes.findIndex(\n    (like) => like.username === user.username\n  );\n  const clickHandler =\n    liked > -1\n      ? () => removeLike(post.post.likes[liked]._id)\n      : () => addLike(post.post._id);\n  const likeColor = liked > -1 ? \"red\" : \"grey\";\n  const likeIcon = liked > -1 ? \"heart\" : \"heart outline\";\n\n  async function handleDelete(e) {\n    e.preventDefault();\n    await postService.deleteOne(post.post._id);\n    history.push(\"/\" + user.username);\n  }\n\n  function changeShow(e) {\n    e.preventDefault();\n    setShow(!show);\n  }\n  async function clickHandlerComment(e) {\n    e.preventDefault();\n    let comment = await commentService.getComment(e.target.id);\n    let likedComment = comment.comment.likes.findIndex(\n      (like) => like.username === user.username\n    );\n\n    if (likedComment > -1) {\n      removeLikeComment(comment.comment.likes[likedComment]._id);\n    } else {\n      addLikeComment(comment.comment._id);\n    }\n  }\n\n  const iconName = show === true ? \"comment\" : \"comment outline\";\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={({ height: \"100vh\" }, { margin: \"20px\" })}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Card centered className=\"profileCard\">\n          <Card fluid id=\"usernameHeader\">\n            <Header as=\"h2\" className=\"postUsername\" floated=\"right\">\n              {post.postUser.username}\n              <Link to={\"/\" + post.postUser.username}>\n                <Image\n                  className=\"postAvatar\"\n                  to=\"/\"\n                  src={post.postUser.photoUrl}\n                  avatar\n                  size=\"large\"\n                  floated=\"left\"\n                ></Image>\n              </Link>\n            </Header>\n          </Card>\n          <Card centered raised image={post.post.photoUrl} size=\"medium\" />\n          <Card.Content>\n            <Card.Description>\n              <Segment>\n                <span className=\"postBio\">Comment:</span>\n                <br /> <br />\n                {post.post.comment}\n              </Segment>\n              {user._id === post.postUser._id ? (\n                <Card.Group itemsPerRow={2}>\n                  <Card>\n                    <Button>Update</Button>\n                  </Card>\n                  <Card>\n                    <Button onClick={handleDelete}>Delete</Button>\n                  </Card>\n                </Card.Group>\n              ) : null}\n              <br />\n              <Icon name={iconName} onClick={changeShow}>\n                &nbsp;{commentsAndUsers.length ? commentsAndUsers.length : \"\"}\n              </Icon>\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              <Icon\n                className=\"heartIcon\"\n                onClick={clickHandler}\n                name={likeIcon}\n                color={likeColor}\n              >\n                &nbsp;{likes.length ? likes.length : \"\"}\n              </Icon>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        {show === true ? (\n          <Card fluid>\n            <Form>\n              <Form.TextArea\n                name=\"comment\"\n                placeholder=\"comment\"\n                onChange={handleChange}\n              />\n              <div>\n                <Button\n                  id=\"signupButton\"\n                  className=\"btn\"\n                  size=\"tiny\"\n                  onClick={handleCommentSubmit}\n                >\n                  Add Comment\n                </Button>\n                <div className=\"closeBtn\" onClick={changeShow}>\n                  X\n                </div>\n              </div>\n            </Form>\n          </Card>\n        ) : (\n          \"\"\n        )}\n        <Card fluid header=\"Comments:\" id=\"usernameHeader\" />\n        <Segment>\n          {commentsAndUsers.map((commentsAndUser) => {\n            return (\n              <>\n                <Message floating key={commentsAndUser.comment._id}>\n                  {commentsAndUser.comment.user === user._id ? (\n                    <Icon\n                      name=\"ellipsis horizontal\"\n                      onClick={toggleDropdown}\n                      id={commentsAndUser.comment._id}\n                      className=\"threeDots\"\n                    >\n                      {dropdown === true ? \"\" : \"\"}\n                    </Icon>\n                  ) : (\n                    \"\"\n                  )}\n                  <Link to=\"/\">{commentsAndUser.user.username}:&nbsp;</Link>\n                  <span className=\"comment\">\n                    {commentsAndUser.comment.comment}\n                  </span>\n                  {menu === true && comment == commentsAndUser.comment._id ? (\n                    <>\n                      <Button\n                        className=\"btn\"\n                        size=\"tiny\"\n                        onClick={handleDeleteComment}\n                      >\n                        Delete\n                      </Button>{\" \"}\n                      <Button className=\"btn\" size=\"tiny\">\n                        Update\n                      </Button>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </Message>\n                <div className=\"heartContainer\">\n                  <Icon\n                    name={\n                      commentsAndUser.comment.likes.findIndex(\n                        (like) => like.username === user.username\n                      ) > -1\n                        ? \"heart\"\n                        : \"heart outline\"\n                    }\n                    color={\n                      commentsAndUser.comment.likes.findIndex(\n                        (like) => like.username === user.username\n                      ) > -1\n                        ? \"red\"\n                        : \"grey\"\n                    }\n                    id={commentsAndUser.comment._id}\n                    onClick={clickHandlerComment}\n                    className=\"heartOutline\"\n                  >\n                    {\" \"}\n                    <div className=\"counterContainer\">\n                      &nbsp;\n                      {commentsAndUser.comment.likes.length\n                        ? commentsAndUser.comment.likes.length\n                        : \"\"}\n                    </div>\n                  </Icon>\n                </div>\n              </>\n            );\n          })}\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport \"./PhotoPostShow.css\";\nimport PhotoPostCard from \"../../components/PhotoPostCard/PhotoPostCard\";\nimport likesService from \"../../utils/likesService\";\nimport commentService from \"../../utils/commentService\";\n\nexport default function PhotoPostShow({ user }) {\n  const { id } = useParams();\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [post, setPost] = useState({});\n  const [commentsAndUsers, setCommentsAndUsers] = useState([]);\n  const [dropdown, setDropdown] = useState(false);\n  const [menu, setMenu] = useState(false);\n  const [show, setShow] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [input, setInput] = useState({\n    comment: \"\",\n    postId: id,\n  });\n\n  useEffect(() => {\n    async function getPost(id) {\n      setLoading(true);\n      const retrievedPost = await postService.getPost(id);\n      setPost(retrievedPost);\n      setCommentsAndUsers(retrievedPost.commentsAndUser);\n      setLoading(false);\n    }\n    getPost(id);\n  }, []);\n\n  async function getPost(id) {\n    const retrievedPost = await postService.getPost(id);\n    setPost(retrievedPost);\n    setCommentsAndUsers(retrievedPost.commentsAndUser);\n  }\n\n  async function addLike(postId) {\n    try {\n      await likesService.addLike(postId);\n      getPost(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function handleDeleteComment(e) {\n    e.preventDefault();\n    await commentService.deleteWritingComment(comment);\n    getPost(id);\n    history.push(`post/${id}`);\n  }\n\n  async function removeLike(likeID) {\n    try {\n      await likesService.removeLike(likeID);\n      getPost(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleCommentSubmit(e) {\n    e.preventDefault();\n    await commentService.addPhotoComment(input);\n    await getPost(id);\n    setShow(!show)\n  }\n  function toggleDropdown(e) {\n    e.preventDefault();\n    setDropdown(!dropdown);\n    setComment(e.target.id);\n    setMenu(!menu);\n  }\n  async function addLikeComment(commentId) {\n    try {\n      await likesService.addLikeComment(commentId);\n      getPost(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function removeLikeComment(likeID) {\n    try {\n      await likesService.removeLikeComment(likeID);\n      getPost(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\"}, {margin: '20px'}}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  } else {\n    return (\n      <PhotoPostCard\n        post={post}\n        user={user}\n        removeLike={removeLike}\n        addLike={addLike}\n        handleCommentSubmit={handleCommentSubmit}\n        menu={menu}\n        handleDeleteComment={handleDeleteComment}\n        handleChange={handleChange}\n        commentsAndUsers={commentsAndUsers}\n        toggleDropdown={toggleDropdown}\n        dropdown={dropdown}\n        addLikeComment={addLikeComment}\n        comment={comment}\n        removeLikeComment={removeLikeComment}\n        setShow={setShow}\n        show={show}\n      />\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Button, Form, Grid, Segment, Card } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport \"./AddWriting.css\";\n\nexport default function AddWriting({ user }) {\n  const history = useHistory();\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n    user: user,\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await postService.createWriting(input);\n    history.push(`/${user.username}`);\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={({ height: \"100vh\" }, { margin: \"20px\" })}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">Add New Writing</h1>\n          </Card>\n          <Segment>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.Input\n                className=\"form-control\"\n                name=\"title\"\n                placeholder=\"title for your writing\"\n                onChange={handleChange}\n                required\n              />\n              <Form.TextArea\n                style={{ minHeight: 100 }}\n                className=\"form-control\"\n                name=\"content\"\n                value={input.content}\n                placeholder=\"add writing content\"\n                onChange={handleChange}\n                required\n              />\n              <Button type=\"submit\" className=\"btn\" id=\"addButton\">\n                Post Your Thoughts\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport {\n  Card,\n  Grid,\n  Segment,\n  Icon,\n  Image,\n  Header,\n  Button,\n  Form,\n  Divider,\n  Message,\n} from \"semantic-ui-react\";\nimport \"./WritingCard.css\";\nimport commentService from \"../../utils/commentService\";\n\nexport default function WritingCard({\n  writing,\n  user,\n  addLikeWriting,\n  addLikeComment,\n  removeLikeComment,\n  removeLikeWriting,\n  handleCommentSubmit,\n  handleChange,\n  commentsAndUsers,\n  handleDeleteComment,\n  toggleDropdown,\n  menu,\n  dropdown,\n  comment,\n  show,\n  setShow,\n}) {\n  const history = useHistory();\n  const likes = writing.writing.likes;\n  const liked = writing.writing.likes.findIndex(\n    (like) => like.username === user.username\n  );\n\n  async function clickHandlerComment(e) {\n    e.preventDefault();\n    let comment = await commentService.getComment(e.target.id);\n    let likedComment = comment.comment.likes.findIndex(\n      (like) => like.username === user.username\n    );\n\n    if (likedComment > -1) {\n      removeLikeComment(comment.comment.likes[likedComment]._id);\n    } else {\n      addLikeComment(comment.comment._id);\n    }\n  }\n\n  const clickHandler =\n    liked > -1\n      ? () => removeLikeWriting(writing.writing.likes[liked]._id)\n      : () => addLikeWriting(writing.writing._id);\n  const likeColor = liked > -1 ? \"red\" : \"grey\";\n  const likeIcon = liked > -1 ? \"heart\" : \"heart outline\";\n\n  function changeShow(e) {\n    e.preventDefault();\n    setShow(!show);\n  }\n\n  async function handleDelete(e) {\n    e.preventDefault();\n    await postService.deleteWriting(writing.writing._id);\n    history.push(\"/\" + user.username);\n  }\n  async function handleUpdate(e) {\n    e.preventDefault();\n    history.push(`/updatewriting/${writing.writing._id}`);\n  }\n\n  const iconName = show === true ? \"comment\" : \"comment outline\";\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={({ height: \"100vh\" }, { margin: \"20px\" })}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Card centered className=\"profileCard\">\n          <Card fluid id=\"usernameHeader\">\n            <Header as=\"h2\" className=\"postUsername\" floated=\"right\">\n              Author: &nbsp;&nbsp;{writing.writingUser.username}\n              <Link to={\"/\" + writing.writingUser.username}>\n                <Image\n                  className=\"postAvatar\"\n                  to=\"/\"\n                  src={writing.writingUser.photoUrl}\n                  avatar\n                  size=\"large\"\n                  floated=\"left\"\n                ></Image>\n              </Link>\n            </Header>\n          </Card>\n          <Card centered raised as=\"h4\" header={writing.writing.title} />\n          <Card.Content>\n            <Card.Description>\n              <Segment>\n                <br />\n                {writing.writing.content}\n              </Segment>\n              {user._id === writing.writingUser._id ? (\n                <Card.Group itemsPerRow={2}>\n                  <Card>\n                    <Button onClick={handleUpdate}>Update</Button>\n                  </Card>\n                  <Card>\n                    <Button onClick={handleDelete}>Delete</Button>\n                  </Card>\n                </Card.Group>\n              ) : null}\n              <br />\n              <Icon name={iconName} onClick={changeShow}>\n                &nbsp;{commentsAndUsers.length ? commentsAndUsers.length : \"\"}\n              </Icon>\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              <Icon\n                className=\"heartIcon\"\n                name={likeIcon}\n                color={likeColor}\n                onClick={clickHandler}\n              >\n                &nbsp;{likes.length ? likes.length : \"\"}\n              </Icon>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        {show === true ? (\n          <Card fluid>\n            <Form>\n              <Form.TextArea\n                name=\"comment\"\n                placeholder=\"comment\"\n                onChange={handleChange}\n              />\n              <div>\n                <Button\n                  id=\"signupButton\"\n                  className=\"btn\"\n                  size=\"tiny\"\n                  onClick={handleCommentSubmit}\n                >\n                  Add Comment\n                </Button>\n                <div className=\"closeBtn\" onClick={changeShow}>\n                  X\n                </div>\n              </div>\n            </Form>\n          </Card>\n        ) : (\n          \"\"\n        )}\n        <Card fluid header=\"Comments:\" id=\"usernameHeader\" />\n        <Segment>\n          {commentsAndUsers.map((commentsAndUser) => {\n            return (\n              <>\n                <Message floating key={commentsAndUser.comment._id}>\n                  {commentsAndUser.comment.user === user._id ? (\n                    <Icon\n                      name=\"ellipsis horizontal\"\n                      onClick={toggleDropdown}\n                      id={commentsAndUser.comment._id}\n                    >\n                      {dropdown === true ? \"\" : \"\"}\n                    </Icon>\n                  ) : (\n                    \"\"\n                  )}\n                  <Link to=\"/\">{commentsAndUser.user.username}:&nbsp;</Link>\n                  <span className=\"comment\">\n                    {commentsAndUser.comment.comment}\n                  </span>\n                  {menu === true && comment === commentsAndUser.comment._id ? (\n                    <>\n                      <Button\n                        className=\"btn\"\n                        size=\"tiny\"\n                        onClick={handleDeleteComment}\n                      >\n                        Delete\n                      </Button>{\" \"}\n                      <Button className=\"btn\" size=\"tiny\">\n                        Update\n                      </Button>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </Message>\n                <div className=\"heartContainer\">\n                  <Icon\n                    name={\n                      commentsAndUser.comment.likes.findIndex(\n                        (like) => like.username === user.username\n                      ) > -1\n                        ? \"heart\"\n                        : \"heart outline\"\n                    }\n                    color={\n                      commentsAndUser.comment.likes.findIndex(\n                        (like) => like.username === user.username\n                      ) > -1\n                        ? \"red\"\n                        : \"grey\"\n                    }\n                    id={commentsAndUser.comment._id}\n                    onClick={clickHandlerComment}\n                    className=\"heartOutline\"\n                  >\n                    {\" \"}\n                    <div className=\"counterContainer\">\n                      &nbsp;\n                      {commentsAndUser.comment.likes.length\n                        ? commentsAndUser.comment.likes.length\n                        : \"\"}\n                    </div>\n                  </Icon>\n                </div>\n              </>\n            );\n          })}\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport \"./WritingShow.css\";\nimport WritingCard from \"../../components/WritingCard/WritingCard\";\nimport likesService from \"../../utils/likesService\";\nimport commentService from \"../../utils/commentService\";\n\nexport default function WritingShow({ user }) {\n  const history = useHistory();\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [writing, setWriting] = useState({});\n  const [dropdown, setDropdown] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [menu, setMenu] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const [commentsAndUsers, setCommentsAndUsers] = useState([]);\n  const [input, setInput] = useState({\n    comment: \"\",\n    writingId: id,\n  });\n\n  useEffect(() => {\n    async function getWriting(id) {\n      setLoading(true);\n      const retrievedWriting = await postService.getWriting(id);\n      setWriting(retrievedWriting);\n      setCommentsAndUsers(retrievedWriting.commentsAndUser);\n      setLoading(false);\n    }\n    getWriting(id);\n  }, []);\n\n  async function getWriting(id) {\n    // setLoading(true);\n    const retrievedWriting = await postService.getWriting(id);\n    setWriting(retrievedWriting);\n    setCommentsAndUsers(retrievedWriting.commentsAndUser);\n    // setLoading(false);\n  }\n\n  async function removeLikeWriting(likeID) {\n    console.log(id);\n    try {\n      await likesService.removeLikeWriting(likeID);\n      getWriting(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleCommentSubmit(e) {\n    e.preventDefault();\n    await commentService.addWritingComment(input);\n    await getWriting(id);\n    setShow(!show)\n  }\n\n  async function addLikeWriting(id) {\n    try {\n      await likesService.addLikeWriting(id);\n      getWriting(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function addLikeComment(commentId) {\n    try {\n      await likesService.addLikeComment(commentId);\n      getWriting(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeLikeComment(likeID) {\n    try {\n      await likesService.removeLikeComment(likeID);\n      getWriting(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function toggleDropdown(e) {\n    e.preventDefault();\n    setDropdown(!dropdown);\n    setComment(e.target.id);\n    setMenu(!menu);\n  }\n\n  async function handleDeleteComment(e) {\n    e.preventDefault();\n    await commentService.deleteWritingComment(comment);\n    getWriting(id);\n    history.push(`/writing/${id}`);\n  }\n\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  } else {\n    return (\n      <WritingCard\n        writing={writing}\n        handleChange={handleChange}\n        user={user}\n        commentsAndUsers={commentsAndUsers}\n        handleCommentSubmit={handleCommentSubmit}\n        removeLikeWriting={removeLikeWriting}\n        addLikeWriting={addLikeWriting}\n        handleDeleteComment={handleDeleteComment}\n        menu={menu}\n        dropdown={dropdown}\n        comment={comment}\n        toggleDropdown={toggleDropdown}\n        addLikeComment={addLikeComment}\n        removeLikeComment={removeLikeComment}\n        show={show}\n        setShow={setShow}\n      />\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { Button, Form, Grid, Segment, Card } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\n\nexport default function UpdateWritingCard({\n  handleChange,\n  handleSubmit,\n  test,\n  input,\n}) {\n\n  useEffect(() => {\n    test();\n  }, []);\n  \n  const history = useHistory();\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await postService.updateWriting(input);\n    history.push(`/writing/${input.id}`);\n  }\n  return (\n    <>\n      <h1>THIS IS THE UPDATE FORM</h1>\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">Changing your thought?</h1>\n          </Card>\n          <Segment>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.Input\n                className=\"form-control\"\n                name=\"title\"\n                value={input.title}\n                placeholder=\"title for your writing\"\n                onChange={handleChange}\n                required\n              />\n              <Form.TextArea\n                style={{ minHeight: 100 }}\n                className=\"form-control\"\n                name=\"content\"\n                value={input.content}\n                placeholder=\"add writing content\"\n                onChange={handleChange}\n                required\n              />\n              <Button\n                type=\"submit\"\n                className=\"btn\"\n                id=\"addButton\"\n                onClick={handleSubmit}\n              >\n                Update Writing\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport \"./UpdateWriting.css\";\nimport UpdateWritingCard from \"../../components/UpdateWritingCard/UpdateWritingCard\";\n\nexport default function UpdateWriting({ user }) {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [writing, setWriting] = useState({});\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n    user: user,\n    id: \"\",\n  });\n\n  async function getWriting(id) {\n    setLoading(true);\n    const retrievedWriting = await postService.getWriting(id);\n    setWriting(retrievedWriting);\n    setLoading(false);\n  }\n\n  function test() {\n    setInput({\n      title: writing.writing.title,\n      content: writing.writing.content,\n      id: writing.writing._id,\n    });\n  }\n\n  useEffect(() => {\n    getWriting(id);\n  }, []);\n\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <UpdateWritingCard handleChange={handleChange} test={test} input={input} />\n  );\n}\n","import React from \"react\";\nimport { Grid, Card, Header, Image, Segment, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport \"./WritingPostFeed.css\";\n\nexport default function WritingPostFeed({\n  writing,\n  removeLikeWriting,\n  addLikeWriting,\n  user,\n}) {\n  const link = Link;\n  const liked = writing.likes.findIndex(\n    (likes) => likes.username === user.username\n  );\n  const clickHandler =\n    liked > -1\n      ? () => removeLikeWriting(writing.likes[liked]._id)\n      : () => addLikeWriting(writing._id);\n  const likeColor = liked > -1 ? \"red\" : \"grey\";\n  const likeIcon = liked > -1 ? \"heart\" : \"heart outline\";\n  return (\n    <Card style={{ height: 'fit-content'}}>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Card centered className=\"profileCard\">\n          <Card fluid id=\"usernameHeader\">\n            <Header as=\"h2\" className=\"postUsername\" floated=\"right\">\n              {writing.user.username}\n              <Link to={\"/\" + writing.user.username}>\n                <Image\n                  className=\"postAvatar\"\n                  src={writing.user.photoUrl}\n                  avatar\n                  size=\"large\"\n                  floated=\"left\"\n                ></Image>\n              </Link>\n            </Header>\n          </Card>\n          <Card\n            as={link}\n            to={\"writing/\" + writing._id}\n            centered\n            raised\n            size=\"medium\"\n          >\n            <h6 className=\"writingTitle\">\n              <span className=\"title\">Title:</span>\n              {\"  \" + writing.title} here\n            </h6>\n          </Card>\n\n          <Card.Content>\n            <Card.Description>\n              <Segment>\n                <div className=\"goToContainerWriting\">\n                  <h6>Click title for more</h6>\n                </div>\n              </Segment>\n              <Icon\n                className=\"like\"\n                name={likeIcon}\n                color={likeColor}\n                onClick={clickHandler}\n              >\n                {writing.likes.length ? writing.likes.length : \"\"}\n              </Icon>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </Grid.Column>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport postService from \"../../utils/postService\";\nimport {\n  Grid,\n  Card,\n  Button,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"./MainWriting.css\";\nimport WritingPostFeed from \"../../components/WritingPostFeed/WritingPostFeed\";\nimport likesService from \"../../utils/likesService\";\n\nexport default function MainWriting({ user }) {\n  const [writings, setWritings] = useState([]);\n  const [filter, setFilter] = useState(true)\n\n  function clickToggle(e){\n    e.preventDefault()\n    setFilter(!filter)\n  }\n\n  async function getWritings() {\n    const data = await postService.getAllWritingPosts();\n    setWritings([...data.writings]);\n  }\n  async function addLikeWriting(id) {\n    try {\n      await likesService.addLikeWriting(id);\n      getWritings();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeLikeWriting(id) {\n    try {\n      await likesService.removeLikeWriting(id);\n      getWritings();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getWritings();\n  }, []);\n  if (writings.length < 1) {\n    return (\n      <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\"}, {margin: '20px'}}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <br></br>\n        <br></br>\n        <Card.Group className=\"headerCard\">\n          <Card fluid header=\"Browse Writings:\" />\n          <Button className='toggleButton' id='signupButton' onClick={clickToggle}>{filter === true ? 'showing recent' : 'showing oldest'}</Button>\n\n        </Card.Group>\n        <Segment>\n          No Writings Yet\n        </Segment>\n        </Grid.Column>\n        </Grid>\n    );\n  } else {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\"}, {margin: '20px'}}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <br></br>\n          <br></br>\n          <Card.Group className=\"headerCard\">\n            <Card fluid header=\"Browse Posts:\" />\n            <Button className='toggleButton' id='signupButton' onClick={clickToggle}>{filter === true ? 'showing recent' : 'showing oldest'}</Button>\n\n          </Card.Group>\n          <br></br>\n          <Card.Group itemsPerRow={2}>\n            {filter === true ?\n            <>\n            {writings.slice(0).reverse().map((writing) => {\n              return (\n                <WritingPostFeed\n                  key={writing._id}\n                  writing={writing}\n                  addLikeWriting={addLikeWriting}\n                  removeLikeWriting={removeLikeWriting}\n                  user={user}\n                />\n              );\n            })}\n            </>\n            :\n            <>\n            {writings.map((writing) => {\n              return (\n                <WritingPostFeed\n                  key={writing._id}\n                  writing={writing}\n                  addLikeWriting={addLikeWriting}\n                  removeLikeWriting={removeLikeWriting}\n                  user={user}\n                />\n              );\n            })}\n            </>\n            }\n \n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Modal, Image, Grid, Segment, Header } from \"semantic-ui-react\";\nimport \"./Home.css\";\nexport default function Home({ user }) {\n  const [toggle, setToggle] = useState(true);\n  const [open, setOpen] = useState(true);\n\n  const history = useHistory();\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  function handleLogin(e) {\n    e.preventDefault();\n    history.push(\"/login\");\n  }\n  function handleSignup(e) {\n    e.preventDefault();\n    history.push(\"/signup\");\n  }\n\n  if (toggle === true) {\n    return (\n      <Modal\n      closeIcon\n        open={open}\n        onClose={() => setToggle(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Image\n          className=\"logoGif\"\n          src='https://i.imgur.com/S9tbSpK.gif'\n        />\n        <Segment id=\"homeText\" floating>\n          <Header floating>welcome to share space</Header>\n        </Segment>\n        <Grid.Row>\n          <br />\n          <br />\n          <div className=\"homeButtonContainer\">\n            <input\n              type=\"button\"\n              value=\"Signup\"\n              className=\"homeButton\"\n              id=\"homeButton\"\n              onClick={handleSignup}\n            ></input>\n            <input\n              type=\"button\"\n              value=\"Login\"\n              className=\"homeButton\"\n              id=\"homeButton\"\n              onClick={handleLogin}\n            ></input>\n          </div>\n        </Grid.Row>\n\n        {/* <Button id='signupButton'>Signup</Button> <Button id='signupButton'>Login</Button> */}\n      </Modal>\n    );\n  } else {\n    if (user) {\n      history.push(\"/mainPhoto\");\n    } else {\n      history.push(\"/login\");\n    }\n    return <h1>...Redirecting</h1>;\n  }\n}\n","import React from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport \"./ErrorPage.css\";\n\nexport default function ErrorPage() {\n  return (\n    <div className=\"imageContainer\">\n      <Image className=\"error\" src=\"https://i.imgur.com/EV5DyAm.png\" />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Redirect, Route, Switch, useHistory, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport ProfilePage from \"../ProfilePage/ProfilePage\";\nimport MainPhoto from \"../MainPhoto/MainPhoto\";\nimport Friends from \"../Friends/Friends\";\nimport Requests from \"../Requests/Requests\";\nimport AddPost from \"../AddPost/AddPost\";\nimport UpdateProfile from \"../UpdateProfile/UpdateProfile\";\nimport userService from \"../../utils/userService\";\nimport tokenService from \"../../utils/tokenService\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport PhotoPostShow from \"../PhotoPostShow/PhotoPostShow\";\nimport AddWriting from \"../AddWriting/AddWriting\";\nimport WritingShow from \"../WritingShow/WritingShow\";\nimport UpdateWriting from \"../UpdateWriting/UpdateWriting\";\nimport MainWriting from \"../MainWriting/MainWriting\";\nimport Home from \"../Home/Home\";\nimport ErrorPage from \"../ErrorPage/ErrorPage\";\n\nfunction App() {\n  const history = useHistory();\n  const [user, setUser] = useState(userService.getUser());\n  const location = useLocation()\n\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser());\n  }\n\n  function handleLogout() {\n    tokenService.removeToken();\n    userService.logout();\n    setUser(null);\n    history.push(\"/login\");\n  }\n\n  return (\n    \n    <div className=\"App\">\n      {location.pathname === '/' ? null :\n      <NavBar\n        user={user}\n        handleSignUpOrLogin={handleSignUpOrLogin}\n        handleLogout={handleLogout}\n      />\n  }\n      <Switch>\n        <Route exact path=\"/login\">\n          <LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />\n        </Route>\n        <Route exact path=\"/\">\n          <Home user={user} />\n        </Route>\n        <Route exact path=\"/404\">\n          <ErrorPage />\n        </Route>\n        {user ? (\n            <Switch>\n              <Route exact path=\"/update\">\n                <UpdateProfile user={user} handleLogout={handleLogout} />\n              </Route>\n              <Route exact path=\"/mainphoto\">\n                <MainPhoto user={user} handleLogout={handleLogout} />\n              </Route>\n              <Route exact path=\"/mainwriting\">\n                <MainWriting user={user} handleLogout={handleLogout} />\n              </Route>\n              <Route exact path=\"/friends\">\n                <Friends\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/requests\">\n                <Requests\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/addpost\">\n                <AddPost\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/addwriting\">\n                <AddWriting\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/updatewriting/:id\">\n                <UpdateWriting\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route path=\"/show/:id\">\n                <PhotoPostShow\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route path=\"/writing/:id\">\n                <WritingShow\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/:username\">\n                <ProfilePage\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n            </Switch>\n        ) : (\n          <Redirect to=\"/\" />\n        )}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}