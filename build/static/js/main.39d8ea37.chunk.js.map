{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/PhotoPostContent/PhotoPostContent.jsx","components/WritingPostContent/WritingPostContent.jsx","components/ProfileCard/NonFriendCard.jsx","components/ProfileCard/FriendProfileCard.jsx","components/ProfileCard/RequestPendingCard.jsx","components/ProfileCard/UsersCard.jsx","components/ProfileCard/ProfileCard.jsx","utils/friendService.js","pages/ProfilePage/ProfilePage.jsx","utils/postService.js","components/PhotoPostFeed/PhotoPostFeed.jsx","utils/likesService.js","pages/MainPhoto/MainPhoto.jsx","components/FriendCard/FriendCard.jsx","pages/Friends/Friends.jsx","components/UserCard/UserCard.jsx","pages/Requests/Requests.jsx","pages/AddPost/AddPost.jsx","pages/UpdateProfile/UpdateProfile.jsx","components/NavBar/NavBar.jsx","utils/commentService.js","components/PhotoPostCard/PhotoPostCard.jsx","pages/PhotoPostShow/PhotoPostShow.jsx","pages/AddWriting/AddWriting.jsx","components/WritingCard/WritingCard.jsx","pages/WritingShow/WritingShow.jsx","components/UpdateWritingCard/UpdateWritingCard.jsx","pages/UpdateWriting/UpdateWriting.jsx","components/WritingPostFeed/WritingPostFeed.jsx","pages/MainWriting/MainWriting.jsx","pages/Home/Home.jsx","pages/ErrorPage/ErrorPage.jsx","components/UpdatePostCard/UpdatePostCard.jsx","pages/UpdatePost/UpdatePost.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","body","then","res","ok","json","Error","tokenService","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","Authorization","SignUpPage","history","useHistory","useState","setError","fileUpload","setFileUpload","password","confirmPassword","email","formInput","setFormInput","handleInput","e","target","name","value","a","key","preventDefault","form","FormData","append","userService","handleSignUpOrLogin","push","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","autoComplete","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","Field","files","Button","id","LoginPage","fluid","size","Message","to","PhotoPostContent","profileUser","posts","length","Card","Group","header","_id","itemsPerRow","map","post","Link","image","photoUrl","WritingPostContent","writings","writing","Content","title","NonFriendCard","userRequest","requestFriend","centered","Icon","onClick","wrapped","ui","Meta","Description","extra","friends","FriendProfileCard","RequestPendingCard","UsersCard","ProfileCard","loggedInUser","friendArray","i","friendRequests","includes","friendRequest","data","denyRequest","approveRequest","removeFriend","ProfilePage","setProfileUser","loading","setLoading","setPosts","userWritings","setUserWritings","useParams","friendService","updatedUser","useEffect","Loader","active","margin","floated","create","createWriting","getAllPhotoPosts","updatePost","photoPost","getPost","deleteOne","deleteWriting","getWriting","updateWriting","getAllWritingPosts","PhotoPostFeed","removeLike","addLike","link","likes","liked","findIndex","like","clickHandler","likeColor","likeIcon","avatar","raised","comment","addLikeWriting","removeLikeWriting","addLikeComment","removeLikeComment","MainPhoto","filter","setFilter","clickToggle","getPosts","postService","postId","likesService","console","log","likeID","slice","reverse","FriendCard","photo","Row","Friends","friend","UserCard","text","Requests","request","AddPost","selectedFile","setSelectedFile","input","setInput","formData","minHeight","UpdateProfile","bio","handleChange","Label","disabled","TextArea","NavBar","handleLogout","hover","setHover","clearing","onMouseEnter","onMouseLeave","addWritingComment","writingId","deleteWritingComment","getComment","addPhotoComment","deletePostComment","PhotoPostCard","handleCommentSubmit","commentsAndUsers","toggleDropdown","dropdown","menu","handleDeleteComment","setShow","show","changeShow","clickHandlerComment","commentService","likedComment","iconName","postUser","commentsAndUser","floating","PhotoPostShow","setPost","setCommentsAndUsers","setDropdown","setMenu","setComment","retrievedPost","commentId","AddWriting","content","WritingCard","writingUser","WritingShow","setWriting","retrievedWriting","UpdateWritingCard","handleSubmit","test","UpdateWriting","WritingPostFeed","MainWriting","setWritings","getWritings","Home","toggle","setToggle","open","setOpen","Modal","closeIcon","onClose","onOpen","background","ErrorPage","App","setUser","location","useLocation","pathname","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.39d8ea37.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken,\n};\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/users/\";\nfunction signup(user) {\n  return fetch(BASE_URL + \"signup\", {\n    method: \"POST\",\n    body: user,\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(\"Email already taken!\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\nfunction getProfile(username) {\n  return fetch(BASE_URL + username, {\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      throw new Error(\"Bad Credentials\");\n    }\n  });\n}\n\n// function UpdateProfile(info) {\n//   console.log(info) //this is working, req.body == {} on backend\n//   return fetch(BASE_URL + `update/${info.user._id}`, {\n//     method: \"POST\",\n//     headers: { Authorization: \"Bearer \" + tokenService.getToken() \n//   },\n//     body: JSON.stringify(info),\n//   }).then((res) => {\n//     if (res.ok) return res.json();\n//     throw new Error(\"error updating profile\");\n//   });\n// }\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n    .then((res) => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error(\"Bad Credentials!\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  logout,\n  login,\n  getUser,\n  getProfile,\n  // UpdateProfile,\n};\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Grid, Header, Image, Form, Segment, Button } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./SignupPage.css\";\n\nexport default function SignUpPage(props) {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(\"\");\n  const [formInput, setFormInput] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    email: \"\",\n  });\n\n  function handleInput(e) {\n    setFormInput({\n      ...formInput,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function handleFileUpload(e) {\n    setFileUpload(e.target.files[0]);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const form = new FormData();\n    form.append(\"photo\", fileUpload);\n\n    for (let key in formInput) {\n      form.append(key, formInput[key]);\n    }\n\n    try {\n      await userService.signup(form);\n      props.handleSignUpOrLogin();\n      history.push(\"/mainphoto\");\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }} className=\"signupForm\">\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image\n              className=\"signupLogo\"\n              src=\"https://i.imgur.com/zWf0THW.png\"\n            />{\" \"}\n            <span className=\"signupText\">Sign Up </span>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked className=\"signupForm\">\n              <Form.Input\n                name=\"username\"\n                placeholder=\"username\"\n                value={formInput.username}\n                onChange={handleInput}\n                required\n              />\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={formInput.email}\n                onChange={handleInput}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={formInput.password}\n                onChange={handleInput}\n                required\n              />\n              <Form.Input\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={formInput.confirmPassword}\n                onChange={handleInput}\n                required\n              />\n              <Form.Field className=\"signupForm\">\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileUpload}\n                  required\n                />\n              </Form.Field>\n              <Button type=\"submit\" className=\"btn\" id=\"signupButton\">\n                Signup\n              </Button>\n            </Segment>\n            {error ? <ErrorMessage error={error} /> : null}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport {\n  Grid,\n  Form,\n  Header,\n  Button,\n  Message,\n  Image,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n  const [formInput, setFormInput] = useState({\n    password: \"\",\n    email: \"\",\n  });\n  function handleInput(e) {\n    setFormInput({\n      ...formInput,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(formInput);\n      props.handleSignUpOrLogin();\n      history.push(\"/mainphoto\");\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" textAlign=\"center\">\n            <Image\n              className=\"signupLogo\"\n              src=\"https://i.imgur.com/zWf0THW.png\"\n            />\n            <span className=\"signupText\">Login to Share Space </span>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={formInput.email}\n                onChange={handleInput}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={formInput.password}\n                onChange={handleInput}\n                required\n              />\n              <Button\n                color=\"teal\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n                id=\"signupButton\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <span className=\"btmText\">New to Share Space? </span>\n            <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {Card } from 'semantic-ui-react'\nimport './PhotoPostContent.css'\n\nexport default function PhotoPostContent({user, profileUser, posts, error}){\n    if(error){\n        return(\n            <h1>error!</h1>\n        )\n    } else {\n    \n    if(!posts.length){\n        return(\n            <>\n            <br></br>\n            <br></br>\n        <Card.Group className='headerCard'>\n                <Card fluid header={\n                    user._id === profileUser._id \n                    ?'Your Posts'\n                    :profileUser.username +\"'s Posts\"}/>\n        </Card.Group>\n        <br>\n        </br>\n         <h4 className='noPosts'>This user hasnt uploaded anyting yet!</h4>\n         </>\n        )\n    } else {\n    return(\n        <>\n        <br></br>\n        <br></br>\n    <Card.Group className='headerCard'>\n            <Card fluid header={\n                    user._id === profileUser._id \n                    ?'Your Posts'\n                    :profileUser.username +\"'s Posts\"}/>\n    </Card.Group>\n    <br>\n    </br>\n        <Card.Group itemsPerRow={3}>\n            {posts.map((post) => {\n                return ( \n                    <Card as={Link} image={post.photoUrl} key={post._id} to={'show/' + post._id}/>\n                )}\n                )}\n            </Card.Group>\n            </>\n    )\n\n    }\n}\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"semantic-ui-react\";\nimport \"./WritingPostContent.css\";\n\nexport default function WritingPostContent({\n  user,\n  profileUser,\n  writings,\n  error,\n}) {\n  if (error) {\n    return <h1>error!</h1>;\n  } else {\n    if (!writings.length) {\n      return (\n        <>\n          <br></br>\n          <br></br>\n          <Card.Group className=\"headerCard\">\n            <Card\n              fluid\n              header={\n                user._id === profileUser._id\n                  ? \"Your Writings\"\n                  : profileUser.username + \"'s Writings\"\n              }\n            />\n          </Card.Group>\n          <br></br>\n          <h4 className=\"noPosts\">No Writings Yet...</h4>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <br></br>\n          <br></br>\n          <Card.Group className=\"headerCard\">\n            <Card\n              fluid\n              header={\n                user._id === profileUser._id\n                  ? \"Your Writings\"\n                  : profileUser.username + \"'s Writings\"\n              }\n            />\n          </Card.Group>\n          <br></br>\n          <Card.Group itemsPerRow={3}>\n            {writings.map((writing) => {\n              return (\n                <Card\n                  className=\"titleCard\"\n                  as={Link}\n                  key={writing._id}\n                  to={\"writing/\" + writing._id}\n                >\n                  <Card.Content>\n                    <h4>{writing.title}</h4>\n                  </Card.Content>\n                </Card>\n              );\n            })}\n          </Card.Group>\n        </>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport \"./ProfileCard.css\";\n\nexport default function NonFriendCard({ userRequest, requestFriend, posts, writings }) {\n  const clickHandler = () => requestFriend(userRequest);\n\n  return (\n    <Card centered className=\"profileCard\">\n      <Card.Group className=\"headerCardOther\">\n        <Card fluid header={userRequest.username} />\n        <div className=\"iconTextNon\">\n          <h5 className=\"firstRowText\">Add</h5>\n          <h5 className=\"secondRowText\">Friend</h5>\n        </div>\n        <Link to={\"/\" + userRequest.username}>\n          <Icon\n            className=\"settingIcon\"\n            name=\"add user\"\n            size=\"large\"\n            onClick={clickHandler}\n          />\n        </Link>\n      </Card.Group>\n      <Image src={userRequest.photoUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <h2 className=\"bioHeader\">Bio:</h2>\n        </Card.Header>\n        <Card.Meta></Card.Meta>\n        <Card.Description></Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        \n        <a>\n          Friends: &nbsp;&nbsp;\n          <Icon name=\"user\" />\n          {userRequest.friends.length ? userRequest.friends.length : 0}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Posts: &nbsp;\n          {posts.length ? posts.length : \"None\"}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Writings: &nbsp;\n          {writings.length ? writings.length : \"None\"}\n        </a>\n      </Card.Content>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport \"./ProfileCard.css\";\n\nexport default function FriendProfileCard({ userRequest, posts, writings }) {\n  return (\n    <Card centered className=\"profileCard\">\n      <Card.Group className=\"headerCardOther\">\n        <Card fluid header={userRequest.username} />\n        <div className=\"iconTextNon\">\n          <h5 className=\"firstRowText\">You're</h5>\n          <h5 className=\"secondRowText\">Friends!</h5>\n        </div>\n\n        <Icon className=\"settingIcon\" name=\"smile outline\" size=\"large\" />\n      </Card.Group>\n      <Image src={userRequest.photoUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <h2 className=\"bioHeader\">Bio:</h2>\n        </Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n        <a>\n          Friends: &nbsp;&nbsp;\n          <Icon name=\"user\" />\n          {userRequest.friends.length ? userRequest.friends.length : 0}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Posts: &nbsp;\n          {posts.length ? posts.length : \"None\"}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Writings: &nbsp;\n          {writings.length ? writings.length : \"None\"}\n        </a>\n      </Card.Content>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport \"./ProfileCard.css\";\n\nexport default function RequestPendingCard({ userRequest, posts, writings }) {\n  return (\n    <Card centered className=\"profileCard\">\n      <Card.Group className=\"headerCardOtherRequest\">\n        <Card fluid header={userRequest.username} />\n        <div className=\"iconText\">\n          <h5 className=\"firstRowText\">Request</h5>\n          <h5 className=\"secondRowText\">Pending</h5>\n        </div>\n        <Icon className=\"settingIcon\" name=\"wait\" size=\"large\" />\n      </Card.Group>\n      <Image src={userRequest.photoUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <h2 className=\"bioHeader\">Bio:</h2>\n        </Card.Header>\n        <Card.Meta>\n          {/* <span className='date'>Joined in 2015</span> */}\n        </Card.Meta>\n        <Card.Description>\n          {/* <Segment>\n                        Bio:\n                    </Segment> */}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <a>\n          Friends: &nbsp;&nbsp;\n          <Icon name=\"user\" />\n          {userRequest.friends.length ? userRequest.friends.length : 0}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Posts: &nbsp;\n          {posts.length ? posts.length : \"None\"}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Writings: &nbsp;\n          {writings.length ? writings.length : \"None\"}\n        </a>\n      </Card.Content>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport \"./ProfileCard.css\";\n\nexport default function UsersCard({ userRequest, posts, writings }) {\n  return (\n    <Card centered className=\"profileCard\">\n      <Card.Group className=\"headerCard\">\n        <Card fluid header={userRequest.username} id=\"usernameHeader\" />\n        {/* <Link to=\"/update\">\n          <Icon className=\"settingIcon\" name=\"setting\" size=\"large\" />\n        </Link> */} \n        <br />  {/* remove this once update works*/}\n      </Card.Group>\n      <Image src={userRequest.photoUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header textAlign=\"center\">\n          <h2 className=\"bioHeader\">Bio:</h2>\n        </Card.Header>\n        <Card.Meta>\n          {/* <span className='date'>Joined in 2015</span> */}\n        </Card.Meta>\n        <Card.Description>\n          {/* <Segment>\n                        Bio:\n                    </Segment> */}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Link to=\"/friends\">\n          Friends: &nbsp;\n          <Icon name=\"user\" />\n          {userRequest.friends.length ? userRequest.friends.length : 0}\n        </Link>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Posts: &nbsp;\n          {posts.length ? posts.length : \"None\"}\n        </a>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <a>\n          Writings: &nbsp;\n          {writings.length ? writings.length : \"None\"}\n        </a>\n      </Card.Content>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./ProfileCard.css\";\nimport NonFriendCard from \"./NonFriendCard\";\nimport FriendProfileCard from \"./FriendProfileCard\";\nimport RequestPendingCard from \"./RequestPendingCard\";\nimport UsersCard from \"./UsersCard\";\n\nexport default function ProfileCard({\n  userRequest,\n  loggedInUser,\n  requestFriend,\n  posts,\n  writings,\n}) {\n  let friendArray = [];\n  for (let i = 0; i < loggedInUser.friendRequests.length; i++) {\n    friendArray.push(loggedInUser.friendRequests[i]._id);\n  }\n  if (userRequest._id === loggedInUser._id) {\n    return (\n      <UsersCard\n        userRequest={userRequest}\n        loggedInUser={loggedInUser}\n        requestFriend={requestFriend}\n        posts={posts}\n        writings={writings}\n      />\n    );\n  } else if (\n    userRequest.friendRequests.includes(loggedInUser._id) ||\n    friendArray.includes(userRequest._id)\n  ) {\n    return (\n      <RequestPendingCard\n        userRequest={userRequest}\n        posts={posts}\n        writings={writings}\n      />\n    );\n  } else if (userRequest.friends.includes(loggedInUser._id)) {\n    return (\n      <FriendProfileCard\n        loggedInUser={loggedInUser}\n        userRequest={userRequest}\n        posts={posts}\n        writings={writings}\n      />\n    );\n  } else if (!userRequest.friendRequests.includes(loggedInUser._id)) {\n    return (\n      <NonFriendCard\n        userRequest={userRequest}\n        requestFriend={requestFriend}\n        posts={posts}\n        writings={writings}\n      />\n    );\n  }\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/friends/\";\n\nfunction friendRequest(userRequest, user) {\n  return fetch(BASE_URL + `request/${userRequest._id}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error adding friend\");\n    })\n    .then((data) => data);\n}\n\nfunction denyRequest(username) {\n  return fetch(BASE_URL + `deny/${username}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error denying request\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nfunction approveRequest(username) {\n  return fetch(BASE_URL + `approve/${username}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error accepting friend\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nfunction removeFriend(username) {\n  return fetch(BASE_URL + `remove/${username}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error removing friend\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  friendRequest,\n  denyRequest,\n  approveRequest,\n  removeFriend,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./ProfilePage.css\";\nimport userService from \"../../utils/userService\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Card, Header, Loader } from \"semantic-ui-react\";\nimport PhotoPostContent from \"../../components/PhotoPostContent/PhotoPostContent\";\nimport WritingPostContent from \"../../components/WritingPostContent/WritingPostContent\";\nimport ProfileCard from \"../../components/ProfileCard/ProfileCard\";\nimport friendService from \"../../utils/friendService\";\n\nexport default function ProfilePage({ user, handleSignUpOrLogin }) {\n  const history = useHistory();\n  const [profileUser, setProfileUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [userWritings, setUserWritings] = useState([]);\n\n  const { username } = useParams();\n\n  async function getProfile() {\n    try {\n      const data = await userService.getProfile(username);\n      setProfileUser(() => data.user);\n      setPosts(() => data.posts);\n      setLoading(false);\n      setUserWritings(() => data.writings);\n    } catch (err) {\n      setError(\n        \"The Profile You Are Looking For Does Not Exist - Please Check Spelling And/Or Casing\"\n      );\n    }\n  }\n\n  async function requestFriend(userRequest) {\n    const updatedUser = await friendService.friendRequest(userRequest);\n    setProfileUser(updatedUser);\n  }\n\n  useEffect(() => {\n    getProfile();\n  }, [username]);\n\n  if (error) {\n    history.push('/404')\n    return (<h1>{error}</h1>);\n  }\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n    return (\n      <>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: \"100vh\"}, {margin: '20px'}}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header floated=\"right\">\n              {/* <Link to=\"/main\"><Icon name=\"setting\" floated=\"right\" size='large'></Icon></Link> */}\n            </Header>\n            <ProfileCard\n              userRequest={profileUser}\n              loggedInUser={user}\n              requestFriend={requestFriend}\n              posts={posts}\n              writings={userWritings}\n            />\n            <Card centered className=\"profileCard\">\n              <PhotoPostContent\n                error={error}\n                user={user}\n                profileUser={profileUser}\n                posts={posts}\n              />\n            </Card>\n            <Card centered className=\"profileCard\">\n              <WritingPostContent\n                user={user}\n                profileUser={profileUser}\n                writings={userWritings}\n              />\n            </Card>\n          </Grid.Column>\n        </Grid>\n      </>\n    );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/posts/\";\n\nfunction create(post) {\n  return fetch(BASE_URL + \"create\", {\n    method: \"POST\",\n    body: post,\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction createWriting(writing) {\n  return fetch(BASE_URL + \"createwriting\", {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(writing),\n  }).then((res) => res.json());\n}\n\nfunction getAllPhotoPosts() {\n  return fetch(BASE_URL + \"mainphoto/\", {\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction getAllWritingPosts() {\n  return fetch(BASE_URL + \"mainwriting/\", {\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction getPost(id) {\n  return fetch(BASE_URL + \"show/\" + id, {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction getWriting(id) {\n  return fetch(BASE_URL + \"writing/\" + id, {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction deleteOne(id) {\n  return fetch(BASE_URL + \"delete/\" + id, {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction deleteWriting(id) {\n  return fetch(BASE_URL + \"deletewriting/\" + id, {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n  }).then((res) => res.json());\n}\n\nfunction updateWriting(writing) {\n  return fetch(BASE_URL + \"updatewriting/\" + writing.id, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(writing),\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error adding friend\");\n    })\n    .then((data) => data);\n}\n\nfunction updatePost(photoPost){\n  return fetch(BASE_URL + \"updatepostphoto/\" + photoPost.id, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(photoPost),\n  })\n    .then((res) => {\n      if (res.ok) return res.json();\n      new Error(\"Error updating post\");\n    })\n    .then((data) => data);\n}\n\nexport default {\n  create,\n  createWriting,\n  getAllPhotoPosts,\n  updatePost,\n  getPost,\n  deleteOne,\n  deleteWriting,\n  getWriting,\n  updateWriting,\n  getAllWritingPosts,\n};\n","import React from \"react\";\nimport { Grid, Card, Header, Image, Segment, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport './PhotoPostFeed.css'\n\nexport default function PhotoPostFeed({ post, removeLike, addLike, user }) {\n    const link = Link\n    const likes = post.likes\n    const liked = post.likes.findIndex(like => like.username === user.username)\n    const clickHandler = liked > -1 ? () => removeLike(post.likes[liked]._id) : () => addLike(post._id)\n    const likeColor = liked > -1 ? 'red' : 'grey'\n    const likeIcon = liked > -1 ? \"heart\" : \"heart outline\"\n  return (\n    <Card style={{ height: 'fit-content'}}> \n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Card centered className=\"profileCard\">\n          <Card fluid id=\"usernameHeader\">\n            <Header as=\"h2\" className=\"postUsername\" floated=\"right\">\n              {post.user.username}\n              <Link to={\"/\" + post.user.username}>\n                <Image\n                  className=\"postAvatar\"\n                  src={post.user.photoUrl}\n                  avatar\n                  size=\"large\"\n                  floated=\"left\"\n                ></Image>\n              </Link>\n            </Header>\n          </Card>\n          <Card as={link} to={'show/' + post._id} centered raised image={post.photoUrl} size=\"medium\" />\n                <div className='goToContainer'>\n                <h6>go to post to see comments</h6>\n                </div>\n          <Card.Content>\n         \n            <Card.Description>\n              <Segment>\n                {post.comment}\n              </Segment>\n              <Icon className=\"like\" name={likeIcon} color={likeColor} onClick={clickHandler}>{likes.length ? likes.length : ''}</Icon>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n       {/* <Segment> */}\n\n            {/* </Segment> */}\n      </Grid.Column>\n    </Card>\n  );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/\";\n\nfunction addLike(id) {\n  return fetch(`${BASE_URL}posts/${id}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error liking Post\");\n  });\n}\n\nfunction addLikeWriting(id) {\n  return fetch(`${BASE_URL}writings/${id}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error liking Post\");\n  });\n}\nfunction addLikeComment(id) {\n  return fetch(`${BASE_URL}comments/${id}/likes`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error liking Post\");\n  });\n}\n\nfunction removeLike(id) {\n  return fetch(`${BASE_URL}likes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error removing like Post\");\n  });\n}\n\nfunction removeLikeWriting(id) {\n  return fetch(`${BASE_URL}writinglikes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error removing like Post\");\n  });\n}\n\nfunction removeLikeComment(id) {\n  return fetch(`${BASE_URL}commentlikes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => {\n    if (res.ok) return res.json();\n    new Error(\"Error removing like from commnent\");\n  });\n}\n\nexport default {\n  addLike,\n  removeLike,\n  addLikeWriting,\n  removeLikeWriting,\n  addLikeComment,\n  removeLikeComment,\n};\n","import React, { useState, useEffect } from \"react\";\nimport postService from \"../../utils/postService\";\nimport {\n  Grid,\n  Card,\n  Button,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"./MainPhoto.css\";\nimport PhotoPostFeed from \"../../components/PhotoPostFeed/PhotoPostFeed\";\nimport likesService from \"../../utils/likesService\";\n\nexport default function MainPhoto({ user }) {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState(true);\n\n  function clickToggle(e) {\n    e.preventDefault();\n    setFilter(!filter);\n  }\n\n  async function getPosts() {\n    const data = await postService.getAllPhotoPosts();\n    setPosts([...data.posts]);\n  }\n  async function addLike(postId) {\n    try {\n      await likesService.addLike(postId);\n      getPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeLike(likeID) {\n    try {\n      await likesService.removeLike(likeID);\n      getPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  if (posts.length < 1) {\n    return (\n      <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\"}, {margin: '20px'}}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <br></br>\n        <br></br>\n        <Card.Group className=\"headerCard\">\n          <Card fluid header=\"Browse Posts:\" />\n          <Button className='toggleButton' id='signupButton' onClick={clickToggle}>{filter === true ? 'showing recent' : 'showing oldest'}</Button>\n\n        </Card.Group>\n        <Segment>\n          No Posts Yet\n        </Segment>\n        </Grid.Column>\n        </Grid>\n    );\n  } else {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\"}, {margin: '20px'}}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <br></br>\n          <br></br>\n          <Card.Group className=\"headerCard\">\n            <Card fluid header=\"Browse Posts:\" />\n            <Button\n              className=\"toggleButton\"\n              id=\"signupButton\"\n              onClick={clickToggle}\n            >\n              {filter === true ? \"showing recent\" : \"showing oldest\"}\n            </Button>\n          </Card.Group>\n          <br></br>\n          <Card.Group itemsPerRow={2} style={{ height: 'fit-content'}}>\n            {/* post.sort({}) */}\n            {filter === true ? (\n              <>\n                {posts.slice(0).reverse().map((post) => {\n                  return (\n                    <PhotoPostFeed\n                      key={post._id}\n                      post={post}\n                      addLike={addLike}\n                      removeLike={removeLike}\n                      user={user}\n                    />\n                  );\n                })}\n              </>\n            ) : (\n              <>\n                {posts.map((post) => {\n                  return (\n                    <PhotoPostFeed\n                      key={post._id}\n                      post={post}\n                      addLike={addLike}\n                      removeLike={removeLike}\n                      user={user}\n                    />\n                  );\n                })}\n              </>\n            )}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Grid } from \"semantic-ui-react\";\nimport \"./FriendCard.css\";\nimport friendService from \"../../utils/friendService\";\n\nexport default function FriendCard({ username, photo, handleSignUpOrLogin }) {\n  async function handleRemove(e) {\n    e.preventDefault();\n    await friendService.removeFriend(username);\n    handleSignUpOrLogin();\n  }\n  useEffect(() => {}, []);\n  return (\n    <>\n      <Card.Group className=\"headerCard\">\n        &nbsp; &nbsp; &nbsp;\n        <Card.Content>\n          {username}\n          <Card.Header textAlign=\"center\"></Card.Header>\n          <Link to={username}>\n            <Image src={photo} avatar />\n          </Link>\n          <Card.Meta>\n            {/* <span className='date'>Joined in 2015</span> */}\n          </Card.Meta>\n          <Card.Description>\n            {/* <Segment>\n                            Bio:\n                        </Segment> */}\n          </Card.Description>\n        </Card.Content>\n        <Grid.Row>\n          {/* <br /> */}\n          {/* <h3 className='userCardText'>&nbsp;&nbsp;&nbsp;accept or deny buttons here\n            </h3> */}\n          <br />\n          <br />\n          <div className=\"buttonCont\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <input\n              type=\"button\"\n              value=\"Unfriend\"\n              className=\"btn\"\n              id=\"denyButton\"\n              // floated='right'\n              // textAlign='right'\n              onClick={handleRemove}\n            ></input>\n          </div>\n        </Grid.Row>\n      </Card.Group>\n      <br></br>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport FriendCard from \"../../components/FriendCard/FriendCard\";\nimport { Card, Grid, Header } from \"semantic-ui-react\";\nimport \"./Friends.css\";\n\nexport default function Friends({ user, handleSignUpOrLogin }) {\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={({ height: \"100vh\" }, { margin: \"20px\" })}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"friendCard\">\n            <h1 className=\"requestsHeader\">Friends List</h1>\n          </Card>\n          {user.friends.length ? \"\" : <Header>No Requests Yet</Header>}\n          {user.friends.map((friend) => {\n            return (\n              <FriendCard\n                username={friend.username}\n                photo={friend.photoUrl}\n                key={friend._id}\n                handleSignUpOrLogin={handleSignUpOrLogin}\n                user={user}\n              />\n            );\n          })}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Image, Grid } from \"semantic-ui-react\";\nimport \"./UserCard.css\";\nimport friendService from \"../../utils/friendService\";\n\nexport default function UserCard({\n  username,\n  user,\n  photo,\n  handleSignUpOrLogin,\n}) {\n  async function handleDeny(e) {\n    e.preventDefault();\n    await friendService.denyRequest(username);\n    handleSignUpOrLogin();\n  }\n\n  async function handleAccept(e) {\n    e.preventDefault();\n    await friendService.approveRequest(username);\n    await handleSignUpOrLogin();\n  }\n\n  return (\n    <>\n      <br></br>\n      <br></br>\n      <Card.Group className=\"headerCard\">\n        <Card.Content text=\"test\">\n          {username}\n          <Card.Header></Card.Header>\n          <Link to={username}>\n            <Image src={photo} avatar />\n          </Link>\n          <Card.Meta>\n            {/* <span className='date'>Joined in 2015</span> */}\n          </Card.Meta>\n          <Card.Description>\n            {/* <Segment>\n                            Bio:\n                        </Segment> */}\n          </Card.Description>\n        </Card.Content>\n        <Grid.Row>\n          <br />\n          <br />\n          <div className='buttonCont'>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;\n            &nbsp;\n            <input\n              type=\"button\"\n              value=\"Accept\"\n              className=\"btn\"\n              id=\"acceptButton\"\n              onClick={handleAccept}\n            ></input>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;\n            <input\n              type=\"button\"\n              value=\"Deny\"\n              className=\"btn\"\n              id=\"denyButton\"\n              onClick={handleDeny}\n            ></input>\n          </div>\n        </Grid.Row>\n      </Card.Group>\n      <br></br>\n    </>\n  );\n}\n","import React from \"react\";\nimport UserCard from \"../../components/UserCard/UserCard\";\nimport { Card, Grid, Header } from \"semantic-ui-react\";\nimport \"./Requests.css\";\n\nexport default function Requests({ user, handleSignUpOrLogin }) {\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\"}, {margin: '20px'}}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">Pending Requests</h1>\n          </Card>\n          {user.friendRequests.length ? '' : <Header>No Requests Yet</Header>}\n          {user.friendRequests.map((request) => {\n            return (\n              <UserCard\n                username={request.username}\n                photo={request.photoUrl}\n                key={request._id}\n                handleSignUpOrLogin={handleSignUpOrLogin}\n                user={user}\n              />\n            );\n          })}\n        </Grid.Column>\n\n        {/* </Grid> */}\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Form, Grid, Segment, Card } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport \"./AddPost.css\";\n\nexport default function AddPost({ user }) {\n  const history = useHistory();\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [input, setInput] = useState({\n    comment: \"\",\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n    formData.append(\"comment\", input.comment);\n    await postService.create(formData);\n    history.push(`/${user.username}`);\n  }\n\n  function handleFileInput(e) {\n    setSelectedFile(e.target.files[0]);\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={({ height: \"100vh\" }, { margin: \"20px\" })}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">New Photo Post</h1>\n          </Card>\n          <Segment>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.Input\n                className=\"form-control\"\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n                required\n              />\n              <Form.Input\n                style={{ minHeight: 100 }}\n                className=\"form-control\"\n                name=\"comment\"\n                value={input.comment}\n                placeholder=\"add comment\"\n                onChange={handleChange}\n                required\n              />\n              <Button type=\"submit\" className=\"btn\" id=\"addButton\">\n                Create Post\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport {\n  Grid,\n  Header,\n  Image,\n  Form,\n  Segment,\n  Button,\n  Label,\n  Card,\n} from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./UpdateProfile.css\";\n\nexport default function UpdateProfile({ user }) {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(\"\");\n  const [formInput, setFormInput] = useState({\n    username: `${user.username}`,\n    bio: `${user.bio}`,\n    user: user,\n    photoUrl: user.photoUrl\n  });\n\n  useEffect(() => {\n    test();\n  }, []);\n\n  function test() {\n    setFormInput({\n      username: user.username,\n      bio: user.bio,\n      user: user,\n    });\n  }\n\n  // function handleInput(e) {\n  //   setFormInput({\n  //     ...formInput,\n  //     [e.target.name]: e.target.value,\n  //   });\n  // }\n  function handleChange(e) {\n    setFormInput({\n      ...formInput,\n      [e.target.name]: e.target.value,\n    });\n  }\n  function handleFileUpload(e) {\n    setFileUpload(e.target.files[0]);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    userService.UpdateProfile(formInput)\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }} className=\"signupForm\">\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <Image className=\"signupLogo\" />{\" \"}\n            <span className=\"updateText\">Profile Update</span>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked className=\"signupForm\">\n              <Label>Username: {user.username}</Label>\n              <br />\n              <br />\n\n              <Form.Input\n                type=\"username\"\n                name=\"username\"\n                value='username is unique and cannot be changed at this time'\n                onChange={handleChange}\n                required\n                disabled\n              />\n\n              <Label>Bio:</Label>\n              <br />\n              <br />\n              <Form.Field className=\"signupForm\">\n                <Form.TextArea\n                  type=\"bio\"\n                  name=\"bio\"\n                  value={formInput.bio}\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Field>\n              <Label>Profile Photo:</Label>\n              <br />\n              <Card raised centered image={user.photoUrl} />\n              <Form.Field className=\"signupForm\">\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileUpload}\n                />\n              </Form.Field>\n              <Button type=\"submit\" className=\"btn\" id=\"signupButton\">\n                Update\n              </Button>\n            </Segment>\n            {error ? <ErrorMessage error={error} /> : null}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import \"./NavBar.css\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Icon, Image } from \"semantic-ui-react\";\n\nexport default function NavBar({ user, handleSignUpOrLogin, handleLogout }) {\n  const [hover, setHover] = useState('');\n  \n \n  return user ? (\n    <Segment clearing className='navContainer'>\n      <Header as=\"h2\" floated=\"right\">\n        <Link to=\"/mainphoto\">\n          <Icon name=\"camera retro\" onMouseEnter={()=>setHover('mainPhoto')} onMouseLeave={()=>setHover('')}></Icon>\n        </Link>\n        {hover === 'mainPhoto' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='mainPhoto'>Post Feed</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/mainwriting\" onMouseEnter={()=>setHover('mainWriting')} onMouseLeave={()=>setHover('')}>\n          <Icon name=\"copy\"></Icon>\n        </Link>\n        {hover === 'mainWriting' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='mainWriting'>Writing Feed</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/notifications\">\n          {/* <Icon name=\"bell\">\n                            <div className='notificationNumberContainer'>\n                            <span className='notificationNumber'>7</span>\n                            </div>\n                        </Icon> */}\n        </Link>\n        <Link to=\"/requests\">\n          <Icon name=\"wait\" onMouseEnter={()=>setHover('requests')} onMouseLeave={()=>setHover('')}>\n            <div className=\"requestNumberContainer\">\n              <span className=\"requestNumber\">\n                {user.friendRequests.length ? user.friendRequests.length : \"\"}\n              </span>\n            </div>\n          </Icon>\n        </Link>\n        {hover === 'requests' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='requests'>Requests</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/friends\">\n          <Icon name=\"handshake\" onMouseEnter={()=>setHover('friends')} onMouseLeave={()=>setHover('')}>\n            <div className=\"friendNumberContainer\">\n              <span className=\"friendNumber\">\n                {user.friends.length ? user.friends.length : \"\"}\n              </span>\n            </div>\n          </Icon>\n        </Link>\n        {hover === 'friends' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='friends'>Friends</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to={\"/\" + user.username} onMouseEnter={()=>setHover('profile')} onMouseLeave={()=>setHover('')} onClick={handleSignUpOrLogin}>\n          <Icon name=\"user circle outline\"></Icon>\n        </Link>\n        {hover === 'profile' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='profile'>Profile</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/addpost\" onMouseEnter={()=>setHover('post')} onMouseLeave={()=>setHover('')}>\n          <Icon name=\"plus square outline\" ></Icon>\n        </Link>\n        {hover === 'post' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='post'>Add Post</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"/addwriting\" onMouseEnter={()=>setHover('writing')} onMouseLeave={()=>setHover('')}>\n          <Icon name=\"pencil alternate\">\n          <div className=\"writingSymbolContainer\">\n              <span className=\"writingSymbol\">\n                +\n              </span>\n            </div>\n          </Icon>\n        </Link> \n        {hover === 'writing' ?\n        <div className='iconMsgCont'>\n        <h5 className='iconName' id='writing'>Add Writing</h5>\n        </div>\n        :\n        ''\n        }\n        <Link to=\"\" onClick={handleLogout}>\n          <span className=\"logoutText\">Logout</span>\n        </Link>\n      </Header>\n      <Header as=\"h2\" floated=\"left\">\n        <Link to=\"/\">\n          <Image\n            className=\"headerLogo\"\n            src=\"https://i.imgur.com/zWf0THW.png\"\n            size=\"mini\"\n          ></Image>\n        </Link>\n      </Header>\n    </Segment>\n  ) : (\n    <Segment clearing className='navContainer'>\n      <Header as=\"h2\" floated=\"left\">\n        <Link to=\"/\">\n          <Image\n            className=\"headerLogo\"\n            src=\"https://i.imgur.com/zWf0THW.png\"\n            size=\"mini\"\n          ></Image>\n        </Link>\n      </Header>\n      <Header as=\"h2\" floated=\"right\">\n        <Link to=\"/login\">\n          <span className=\"logoutText\">Login</span>\n        </Link>\n      </Header>\n    </Segment>\n  );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/comments/\";\n\nfunction addWritingComment(input) {\n  return fetch(`${BASE_URL}writing/${input.writingId}/addcomment`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(input),\n  }).then((res) => res.json());\n}\n\nfunction addPhotoComment(input) {\n  return fetch(`${BASE_URL}post/${input.postId}/addcomment`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n    body: JSON.stringify(input),\n  }).then((res) => res.json());\n}\n\nfunction deletePostComment(id) {\n  return fetch(`${BASE_URL}delete/` + id, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => res.json());\n}\n\nfunction deleteWritingComment(id) {\n  return fetch(`${BASE_URL}delete/` + id, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => res.json());\n}\n\nfunction getComment(id) {\n  return fetch(`${BASE_URL}comment/` + id, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    },\n  }).then((res) => res.json());\n}\n\nexport default {\n  addWritingComment,\n  deleteWritingComment,\n  getComment,\n  addPhotoComment,\n  deletePostComment\n};\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport {\n  Card,\n  Grid,\n  Segment,\n  Icon,\n  Image,\n  Header,\n  Button,\n  Form,\n  Message,\n} from \"semantic-ui-react\";\nimport \"./PhotoPostCard.css\";\nimport commentService from \"../../utils/commentService\";\n\nexport default function PhotoPostCard({\n  post,\n  user,\n  addLike,\n  removeLike,\n  handleChange,\n  handleCommentSubmit,\n  commentsAndUsers,\n  toggleDropdown,\n  dropdown,\n  addLikeComment,\n  removeLikeComment,\n  menu,\n  comment,\n  handleDeleteComment,\n  setShow,\n  show,\n}) {\n  const history = useHistory();\n  const likes = post.post.likes;\n  const liked = post.post.likes.findIndex(\n    (like) => like.username === user.username\n  );\n  const clickHandler =\n    liked > -1\n      ? () => removeLike(post.post.likes[liked]._id)\n      : () => addLike(post.post._id);\n  const likeColor = liked > -1 ? \"red\" : \"grey\";\n  const likeIcon = liked > -1 ? \"heart\" : \"heart outline\";\n\n  async function handleDelete(e) {\n    e.preventDefault();\n    await postService.deleteOne(post.post._id);\n    history.push(\"/\" + user.username);\n  }\n  async function handleUpdate(e) {\n    e.preventDefault();\n    history.push(`/updatepost/${post.post._id}`);\n  }\n\n  function changeShow(e) {\n    e.preventDefault();\n    setShow(!show);\n  }\n  async function clickHandlerComment(e) {\n    e.preventDefault();\n    let comment = await commentService.getComment(e.target.id);\n    let likedComment = comment.comment.likes.findIndex(\n      (like) => like.username === user.username\n    );\n\n    if (likedComment > -1) {\n      removeLikeComment(comment.comment.likes[likedComment]._id);\n    } else {\n      addLikeComment(comment.comment._id);\n    }\n  }\n\n  const iconName = show === true ? \"comment\" : \"comment outline\";\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={({ height: \"100vh\" }, { margin: \"20px\" })}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Card centered className=\"profileCard\">\n          <Card fluid id=\"usernameHeader\">\n            <Header as=\"h2\" className=\"postUsername\" floated=\"right\">\n              {post.postUser.username}\n              <Link to={\"/\" + post.postUser.username}>\n                <Image\n                  className=\"postAvatar\"\n                  to=\"/\"\n                  src={post.postUser.photoUrl}\n                  avatar\n                  size=\"large\"\n                  floated=\"left\"\n                ></Image>\n              </Link>\n            </Header>\n          </Card>\n          <Card centered raised image={post.post.photoUrl} size=\"medium\" />\n          <Card.Content>\n            <Card.Description>\n              <Segment>\n                <span className=\"postBio\">Comment:</span>\n                <br /> <br />\n                {post.post.comment}\n              </Segment>\n              {user._id === post.postUser._id ? (\n                <Card.Group itemsPerRow={2}>\n                  <Card>\n                    <Button onClick={handleUpdate}>Update</Button>\n                  </Card>\n                  <Card>\n                    <Button onClick={handleDelete}>Delete</Button>\n                  </Card>\n                </Card.Group>\n              ) : null}\n              <br />\n              <Icon name={iconName} onClick={changeShow}>\n                &nbsp;{commentsAndUsers.length ? commentsAndUsers.length : \"\"}\n              </Icon>\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              <Icon\n                className=\"heartIcon\"\n                onClick={clickHandler}\n                name={likeIcon}\n                color={likeColor}\n              >\n                &nbsp;{likes.length ? likes.length : \"\"}\n              </Icon>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        {show === true ? (\n          <Card fluid>\n            <Form>\n              <Form.TextArea\n                name=\"comment\"\n                placeholder=\"comment\"\n                onChange={handleChange}\n              />\n              <div>\n                <Button\n                  id=\"signupButton\"\n                  className=\"btn\"\n                  size=\"tiny\"\n                  onClick={handleCommentSubmit}\n                >\n                  Add Comment\n                </Button>\n                <div className=\"closeBtn\" onClick={changeShow}>\n                  X\n                </div>\n              </div>\n            </Form>\n          </Card>\n        ) : (\n          \"\"\n        )}\n        <Card fluid header=\"Comments:\" id=\"usernameHeader\" />\n        <Segment>\n          {commentsAndUsers.map((commentsAndUser) => {\n            return (\n              <>\n                <Message floating key={commentsAndUser.comment._id}>\n                  {commentsAndUser.comment.user === user._id ? (\n                    <Icon\n                      name=\"ellipsis horizontal\"\n                      onClick={toggleDropdown}\n                      id={commentsAndUser.comment._id}\n                      className=\"threeDots\"\n                    >\n                      {dropdown === true ? \"\" : \"\"}\n                    </Icon>\n                  ) : (\n                    \"\"\n                  )}\n                  <Link to=\"/\">{commentsAndUser.user.username}:&nbsp;</Link>\n                  <span className=\"comment\">\n                    {commentsAndUser.comment.comment}\n                  </span>\n                  {menu === true && comment === commentsAndUser.comment._id ? (\n                    <>\n                      <Button\n                        className=\"btn\"\n                        size=\"tiny\"\n                        onClick={handleDeleteComment}\n                      >\n                        Delete\n                      </Button>{\" \"}\n                      <Button className=\"btn\" size=\"tiny\">\n                        Update\n                      </Button>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </Message>\n                <div className=\"heartContainer\">\n                  <Icon\n                    name={\n                      commentsAndUser.comment.likes.findIndex(\n                        (like) => like.username === user.username\n                      ) > -1\n                        ? \"heart\"\n                        : \"heart outline\"\n                    }\n                    color={\n                      commentsAndUser.comment.likes.findIndex(\n                        (like) => like.username === user.username\n                      ) > -1\n                        ? \"red\"\n                        : \"grey\"\n                    }\n                    id={commentsAndUser.comment._id}\n                    onClick={clickHandlerComment}\n                    className=\"heartOutline\"\n                  >\n                    {\" \"}\n                    <div className=\"counterContainer\">\n                      &nbsp;\n                      {commentsAndUser.comment.likes.length\n                        ? commentsAndUser.comment.likes.length\n                        : \"\"}\n                    </div>\n                  </Icon>\n                </div>\n              </>\n            );\n          })}\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport \"./PhotoPostShow.css\";\nimport PhotoPostCard from \"../../components/PhotoPostCard/PhotoPostCard\";\nimport likesService from \"../../utils/likesService\";\nimport commentService from \"../../utils/commentService\";\n\nexport default function PhotoPostShow({ user }) {\n  const { id } = useParams();\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [post, setPost] = useState({});\n  const [commentsAndUsers, setCommentsAndUsers] = useState([]);\n  const [dropdown, setDropdown] = useState(false);\n  const [menu, setMenu] = useState(false);\n  const [show, setShow] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [input, setInput] = useState({\n    comment: \"\",\n    postId: id,\n  });\n\n  useEffect(() => {\n    async function getPost(id) {\n      setLoading(true);\n      const retrievedPost = await postService.getPost(id);\n      setPost(retrievedPost);\n      setCommentsAndUsers(retrievedPost.commentsAndUser);\n      setLoading(false);\n    }\n    getPost(id);\n  }, []);\n\n  async function getPost(id) {\n    const retrievedPost = await postService.getPost(id);\n    setPost(retrievedPost);\n    setCommentsAndUsers(retrievedPost.commentsAndUser);\n  }\n\n  async function addLike(postId) {\n    try {\n      await likesService.addLike(postId);\n      getPost(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function handleDeleteComment(e) {\n    e.preventDefault();\n    await commentService.deleteWritingComment(comment);\n    getPost(id);\n    history.push(`post/${id}`);\n  }\n\n  async function removeLike(likeID) {\n    try {\n      await likesService.removeLike(likeID);\n      getPost(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleCommentSubmit(e) {\n    e.preventDefault();\n    await commentService.addPhotoComment(input);\n    await getPost(id);\n    setShow(!show)\n  }\n  function toggleDropdown(e) {\n    e.preventDefault();\n    setDropdown(!dropdown);\n    setComment(e.target.id);\n    setMenu(!menu);\n  }\n  async function addLikeComment(commentId) {\n    try {\n      await likesService.addLikeComment(commentId);\n      getPost(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function removeLikeComment(likeID) {\n    try {\n      await likesService.removeLikeComment(likeID);\n      getPost(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\"}, {margin: '20px'}}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  } else {\n    return (\n      <PhotoPostCard\n        post={post}\n        user={user}\n        removeLike={removeLike}\n        addLike={addLike}\n        handleCommentSubmit={handleCommentSubmit}\n        menu={menu}\n        handleDeleteComment={handleDeleteComment}\n        handleChange={handleChange}\n        commentsAndUsers={commentsAndUsers}\n        toggleDropdown={toggleDropdown}\n        dropdown={dropdown}\n        addLikeComment={addLikeComment}\n        comment={comment}\n        removeLikeComment={removeLikeComment}\n        setShow={setShow}\n        show={show}\n      />\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Button, Form, Grid, Segment, Card } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport \"./AddWriting.css\";\n\nexport default function AddWriting({ user }) {\n  const history = useHistory();\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n    user: user,\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await postService.createWriting(input);\n    history.push(`/${user.username}`);\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={({ height: \"100vh\" }, { margin: \"20px\" })}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">Add New Writing</h1>\n          </Card>\n          <Segment>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.Input\n                className=\"form-control\"\n                name=\"title\"\n                placeholder=\"title for your writing\"\n                onChange={handleChange}\n                required\n              />\n              <Form.TextArea\n                style={{ minHeight: 100 }}\n                className=\"form-control\"\n                name=\"content\"\n                value={input.content}\n                placeholder=\"add writing content\"\n                onChange={handleChange}\n                required\n              />\n              <Button type=\"submit\" className=\"btn\" id=\"addButton\">\n                Post Your Thoughts\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport {\n  Card,\n  Grid,\n  Segment,\n  Icon,\n  Image,\n  Header,\n  Button,\n  Form,\n  Divider,\n  Message,\n} from \"semantic-ui-react\";\nimport \"./WritingCard.css\";\nimport commentService from \"../../utils/commentService\";\n\nexport default function WritingCard({\n  writing,\n  user,\n  addLikeWriting,\n  addLikeComment,\n  removeLikeComment,\n  removeLikeWriting,\n  handleCommentSubmit,\n  handleChange,\n  commentsAndUsers,\n  handleDeleteComment,\n  toggleDropdown,\n  menu,\n  dropdown,\n  comment,\n  show,\n  setShow,\n}) {\n  const history = useHistory();\n  const likes = writing.writing.likes;\n  const liked = writing.writing.likes.findIndex(\n    (like) => like.username === user.username\n  );\n\n  async function clickHandlerComment(e) {\n    e.preventDefault();\n    let comment = await commentService.getComment(e.target.id);\n    let likedComment = comment.comment.likes.findIndex(\n      (like) => like.username === user.username\n    );\n\n    if (likedComment > -1) {\n      removeLikeComment(comment.comment.likes[likedComment]._id);\n    } else {\n      addLikeComment(comment.comment._id);\n    }\n  }\n\n  const clickHandler =\n    liked > -1\n      ? () => removeLikeWriting(writing.writing.likes[liked]._id)\n      : () => addLikeWriting(writing.writing._id);\n  const likeColor = liked > -1 ? \"red\" : \"grey\";\n  const likeIcon = liked > -1 ? \"heart\" : \"heart outline\";\n\n  function changeShow(e) {\n    e.preventDefault();\n    setShow(!show);\n  }\n\n  async function handleDelete(e) {\n    e.preventDefault();\n    await postService.deleteWriting(writing.writing._id);\n    history.push(\"/\" + user.username);\n  }\n  async function handleUpdate(e) {\n    e.preventDefault();\n    history.push(`/updatewriting/${writing.writing._id}`);\n  }\n\n  const iconName = show === true ? \"comment\" : \"comment outline\";\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={({ height: \"100vh\" }, { margin: \"20px\" })}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Card centered className=\"profileCard\">\n          <Card fluid id=\"usernameHeader\">\n            <Header as=\"h2\" className=\"postUsername\" floated=\"right\">\n              Author: &nbsp;&nbsp;{writing.writingUser.username}\n              <Link to={\"/\" + writing.writingUser.username}>\n                <Image\n                  className=\"postAvatar\"\n                  to=\"/\"\n                  src={writing.writingUser.photoUrl}\n                  avatar\n                  size=\"large\"\n                  floated=\"left\"\n                ></Image>\n              </Link>\n            </Header>\n          </Card>\n          <Card centered raised as=\"h4\" header={writing.writing.title} />\n          <Card.Content>\n            <Card.Description>\n              <Segment>\n                <br />\n                {writing.writing.content}\n              </Segment>\n              {user._id === writing.writingUser._id ? (\n                <Card.Group itemsPerRow={2}>\n                  <Card>\n                    <Button onClick={handleUpdate}>Update</Button>\n                  </Card>\n                  <Card>\n                    <Button onClick={handleDelete}>Delete</Button>\n                  </Card>\n                </Card.Group>\n              ) : null}\n              <br />\n              <Icon name={iconName} onClick={changeShow}>\n                &nbsp;{commentsAndUsers.length ? commentsAndUsers.length : \"\"}\n              </Icon>\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\n              &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n              <Icon\n                className=\"heartIcon\"\n                name={likeIcon}\n                color={likeColor}\n                onClick={clickHandler}\n              >\n                &nbsp;{likes.length ? likes.length : \"\"}\n              </Icon>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        {show === true ? (\n          <Card fluid>\n            <Form>\n              <Form.TextArea\n                name=\"comment\"\n                placeholder=\"comment\"\n                onChange={handleChange}\n              />\n              <div>\n                <Button\n                  id=\"signupButton\"\n                  className=\"btn\"\n                  size=\"tiny\"\n                  onClick={handleCommentSubmit}\n                >\n                  Add Comment\n                </Button>\n                <div className=\"closeBtn\" onClick={changeShow}>\n                  X\n                </div>\n              </div>\n            </Form>\n          </Card>\n        ) : (\n          \"\"\n        )}\n        <Card fluid header=\"Comments:\" id=\"usernameHeader\" />\n        <Segment>\n          {commentsAndUsers.map((commentsAndUser) => {\n            return (\n              <>\n                <Message floating key={commentsAndUser.comment._id}>\n                  {commentsAndUser.comment.user === user._id ? (\n                    <Icon\n                      name=\"ellipsis horizontal\"\n                      onClick={toggleDropdown}\n                      id={commentsAndUser.comment._id}\n                    >\n                      {dropdown === true ? \"\" : \"\"}\n                    </Icon>\n                  ) : (\n                    \"\"\n                  )}\n                  <Link to=\"/\">{commentsAndUser.user.username}:&nbsp;</Link>\n                  <span className=\"comment\">\n                    {commentsAndUser.comment.comment}\n                  </span>\n                  {menu === true && comment === commentsAndUser.comment._id ? (\n                    <>\n                      <Button\n                        className=\"btn\"\n                        size=\"tiny\"\n                        onClick={handleDeleteComment}\n                      >\n                        Delete\n                      </Button>{\" \"}\n                      <Button className=\"btn\" size=\"tiny\">\n                        Update\n                      </Button>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </Message>\n                <div className=\"heartContainer\">\n                  <Icon\n                    name={\n                      commentsAndUser.comment.likes.findIndex(\n                        (like) => like.username === user.username\n                      ) > -1\n                        ? \"heart\"\n                        : \"heart outline\"\n                    }\n                    color={\n                      commentsAndUser.comment.likes.findIndex(\n                        (like) => like.username === user.username\n                      ) > -1\n                        ? \"red\"\n                        : \"grey\"\n                    }\n                    id={commentsAndUser.comment._id}\n                    onClick={clickHandlerComment}\n                    className=\"heartOutline\"\n                  >\n                    {\" \"}\n                    <div className=\"counterContainer\">\n                      &nbsp;\n                      {commentsAndUser.comment.likes.length\n                        ? commentsAndUser.comment.likes.length\n                        : \"\"}\n                    </div>\n                  </Icon>\n                </div>\n              </>\n            );\n          })}\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport \"./WritingShow.css\";\nimport WritingCard from \"../../components/WritingCard/WritingCard\";\nimport likesService from \"../../utils/likesService\";\nimport commentService from \"../../utils/commentService\";\n\nexport default function WritingShow({ user }) {\n  const history = useHistory();\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [writing, setWriting] = useState({});\n  const [dropdown, setDropdown] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [menu, setMenu] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const [commentsAndUsers, setCommentsAndUsers] = useState([]);\n  const [input, setInput] = useState({\n    comment: \"\",\n    writingId: id,\n  });\n\n  useEffect(() => {\n    async function getWriting(id) {\n      setLoading(true);\n      const retrievedWriting = await postService.getWriting(id);\n      setWriting(retrievedWriting);\n      setCommentsAndUsers(retrievedWriting.commentsAndUser);\n      setLoading(false);\n    }\n    getWriting(id);\n  }, []);\n\n  async function getWriting(id) {\n    // setLoading(true);\n    const retrievedWriting = await postService.getWriting(id);\n    setWriting(retrievedWriting);\n    setCommentsAndUsers(retrievedWriting.commentsAndUser);\n    // setLoading(false);\n  }\n\n  async function removeLikeWriting(likeID) {\n    console.log(id);\n    try {\n      await likesService.removeLikeWriting(likeID);\n      getWriting(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleCommentSubmit(e) {\n    e.preventDefault();\n    await commentService.addWritingComment(input);\n    await getWriting(id);\n    setShow(!show)\n  }\n\n  async function addLikeWriting(id) {\n    try {\n      await likesService.addLikeWriting(id);\n      getWriting(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function addLikeComment(commentId) {\n    try {\n      await likesService.addLikeComment(commentId);\n      getWriting(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeLikeComment(likeID) {\n    try {\n      await likesService.removeLikeComment(likeID);\n      getWriting(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function toggleDropdown(e) {\n    e.preventDefault();\n    setDropdown(!dropdown);\n    setComment(e.target.id);\n    setMenu(!menu);\n  }\n\n  async function handleDeleteComment(e) {\n    e.preventDefault();\n    await commentService.deleteWritingComment(comment);\n    getWriting(id);\n    history.push(`/writing/${id}`);\n  }\n\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  } else {\n    return (\n      <WritingCard\n        writing={writing}\n        handleChange={handleChange}\n        user={user}\n        commentsAndUsers={commentsAndUsers}\n        handleCommentSubmit={handleCommentSubmit}\n        removeLikeWriting={removeLikeWriting}\n        addLikeWriting={addLikeWriting}\n        handleDeleteComment={handleDeleteComment}\n        menu={menu}\n        dropdown={dropdown}\n        comment={comment}\n        toggleDropdown={toggleDropdown}\n        addLikeComment={addLikeComment}\n        removeLikeComment={removeLikeComment}\n        show={show}\n        setShow={setShow}\n      />\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { Button, Form, Grid, Segment, Card } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\n\nexport default function UpdateWritingCard({\n  handleChange,\n  handleSubmit,\n  test,\n  input,\n}) {\n\n  useEffect(() => {\n    test();\n  }, []);\n  \n  const history = useHistory();\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await postService.updateWriting(input);\n    history.push(`/writing/${input.id}`);\n  }\n  return (\n    <>\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">Changing your thought?</h1>\n          </Card>\n          <Segment>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.Input\n                className=\"form-control\"\n                name=\"title\"\n                value={input.title}\n                placeholder=\"title for your writing\"\n                onChange={handleChange}\n                required\n              />\n              <Form.TextArea\n                style={{ minHeight: 100 }}\n                className=\"form-control\"\n                name=\"content\"\n                value={input.content}\n                placeholder=\"add writing content\"\n                onChange={handleChange}\n                required\n              />\n              <Button\n                type=\"submit\"\n                className=\"btn\"\n                id=\"addButton\"\n                onClick={handleSubmit}\n              >\n                Update Writing\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport postService from \"../../utils/postService\";\nimport \"./UpdateWriting.css\";\nimport UpdateWritingCard from \"../../components/UpdateWritingCard/UpdateWritingCard\";\n\nexport default function UpdateWriting({ user }) {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [writing, setWriting] = useState({});\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n    user: user,\n    id: \"\",\n  });\n\n  async function getWriting(id) {\n    setLoading(true);\n    const retrievedWriting = await postService.getWriting(id);\n    setWriting(retrievedWriting);\n    setLoading(false);\n  }\n\n  function test() {\n    setInput({\n      title: writing.writing.title,\n      content: writing.writing.content,\n      id: writing.writing._id,\n    });\n  }\n\n  useEffect(() => {\n    getWriting(id);\n  }, []);\n\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <UpdateWritingCard handleChange={handleChange} test={test} input={input} />\n  );\n}\n","import React from \"react\";\nimport { Grid, Card, Header, Image, Segment, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport \"./WritingPostFeed.css\";\n\nexport default function WritingPostFeed({\n  writing,\n  removeLikeWriting,\n  addLikeWriting,\n  user,\n}) {\n  const link = Link;\n  const liked = writing.likes.findIndex(\n    (likes) => likes.username === user.username\n  );\n  const clickHandler =\n    liked > -1\n      ? () => removeLikeWriting(writing.likes[liked]._id)\n      : () => addLikeWriting(writing._id);\n  const likeColor = liked > -1 ? \"red\" : \"grey\";\n  const likeIcon = liked > -1 ? \"heart\" : \"heart outline\";\n  return (\n    <Card style={{ height: 'fit-content'}}>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Card centered className=\"profileCard\">\n          <Card fluid id=\"usernameHeader\">\n            <Header as=\"h2\" className=\"postUsername\" floated=\"right\">\n              {writing.user.username}\n              <Link to={\"/\" + writing.user.username}>\n                <Image\n                  className=\"postAvatar\"\n                  src={writing.user.photoUrl}\n                  avatar\n                  size=\"large\"\n                  floated=\"left\"\n                ></Image>\n              </Link>\n            </Header>\n          </Card>\n          <Card\n            as={link}\n            to={\"writing/\" + writing._id}\n            centered\n            raised\n            size=\"medium\"\n          >\n            <h6 className=\"writingTitle\">\n              <span className=\"title\">Title:</span>\n              {\"  \" + writing.title} here\n            </h6>\n          </Card>\n\n          <Card.Content>\n            <Card.Description>\n              <Segment>\n                <div className=\"goToContainerWriting\">\n                  <h6>Click title for more</h6>\n                </div>\n              </Segment>\n              <Icon\n                className=\"like\"\n                name={likeIcon}\n                color={likeColor}\n                onClick={clickHandler}\n              >\n                {writing.likes.length ? writing.likes.length : \"\"}\n              </Icon>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </Grid.Column>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport postService from \"../../utils/postService\";\nimport {\n  Grid,\n  Card,\n  Button,\n  Segment,\n} from \"semantic-ui-react\";\nimport \"./MainWriting.css\";\nimport WritingPostFeed from \"../../components/WritingPostFeed/WritingPostFeed\";\nimport likesService from \"../../utils/likesService\";\n\nexport default function MainWriting({ user }) {\n  const [writings, setWritings] = useState([]);\n  const [filter, setFilter] = useState(true)\n\n  function clickToggle(e){\n    e.preventDefault()\n    setFilter(!filter)\n  }\n\n  async function getWritings() {\n    const data = await postService.getAllWritingPosts();\n    setWritings([...data.writings]);\n  }\n  async function addLikeWriting(id) {\n    try {\n      await likesService.addLikeWriting(id);\n      getWritings();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function removeLikeWriting(id) {\n    try {\n      await likesService.removeLikeWriting(id);\n      getWritings();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getWritings();\n  }, []);\n  if (writings.length < 1) {\n    return (\n      <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\"}, {margin: '20px'}}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <br></br>\n        <br></br>\n        <Card.Group className=\"headerCard\">\n          <Card fluid header=\"Browse Writings:\" />\n          <Button className='toggleButton' id='signupButton' onClick={clickToggle}>{filter === true ? 'showing recent' : 'showing oldest'}</Button>\n\n        </Card.Group>\n        <Segment>\n          No Writings Yet\n        </Segment>\n        </Grid.Column>\n        </Grid>\n    );\n  } else {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\"}, {margin: '20px'}}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <br></br>\n          <br></br>\n          <Card.Group className=\"headerCard\">\n            <Card fluid header=\"Browse Posts:\" />\n            <Button className='toggleButton' id='signupButton' onClick={clickToggle}>{filter === true ? 'showing recent' : 'showing oldest'}</Button>\n\n          </Card.Group>\n          <br></br>\n          <Card.Group itemsPerRow={2}>\n            {filter === true ?\n            <>\n            {writings.slice(0).reverse().map((writing) => {\n              return (\n                <WritingPostFeed\n                  key={writing._id}\n                  writing={writing}\n                  addLikeWriting={addLikeWriting}\n                  removeLikeWriting={removeLikeWriting}\n                  user={user}\n                />\n              );\n            })}\n            </>\n            :\n            <>\n            {writings.map((writing) => {\n              return (\n                <WritingPostFeed\n                  key={writing._id}\n                  writing={writing}\n                  addLikeWriting={addLikeWriting}\n                  removeLikeWriting={removeLikeWriting}\n                  user={user}\n                />\n              );\n            })}\n            </>\n            }\n \n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Modal, Image, Grid, Segment, Header } from \"semantic-ui-react\";\nimport \"./Home.css\";\nexport default function Home({ user }) {\n  const [toggle, setToggle] = useState(true);\n  const [open, setOpen] = useState(true);\n\n  const history = useHistory();\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  function handleLogin(e) {\n    e.preventDefault();\n    history.push(\"/login\");\n  }\n  function handleSignup(e) {\n    e.preventDefault();\n    history.push(\"/signup\");\n  }\n\n  if (toggle === true) {\n    return (\n      <Modal\n      closeIcon\n        open={open}\n        onClose={() => setToggle(false)}\n        onOpen={() => setOpen(true)}\n      >\n        <Header style={{background: 'ivory'}} textAlign='center'>\n          Welcome to Share Space\n        </Header>\n        <Image\n          className=\"logoGif\"\n          src='https://i.imgur.com/S9tbSpK.gif'\n        />\n        <Segment id=\"homeText\" floating>\n          <Header textAlign='centered'>\n           Share Space is a place to share, meet,<br />\n           and connect with like minded individuals.\n           <br /><br /> \n           Join us today!\n            </Header>\n        </Segment>\n        <Grid.Row>\n          <br />\n          <br />\n          <div className=\"homeButtonContainer\">\n            <input\n              type=\"button\"\n              value=\"Signup\"\n              className=\"homeButton\"\n              id=\"homeButton\"\n              onClick={handleSignup}\n            ></input>\n            <input\n              type=\"button\"\n              value=\"Login\"\n              className=\"homeButton\"\n              id=\"homeButton\"\n              onClick={handleLogin}\n            ></input>\n          </div>\n        </Grid.Row>\n\n        {/* <Button id='signupButton'>Signup</Button> <Button id='signupButton'>Login</Button> */}\n      </Modal>\n    );\n  } else {\n    if (user) {\n      history.push(\"/mainPhoto\");\n    } else {\n      history.push(\"/login\");\n    }\n    return <h1>...Redirecting</h1>;\n  }\n}\n","import React from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport \"./ErrorPage.css\";\n\nexport default function ErrorPage() {\n  return (\n    <div className=\"imageContainer\">\n      <Image className=\"error\" src=\"https://i.imgur.com/EV5DyAm.png\" />\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Button, Form, Grid, Segment, Card } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport postService from \"../../utils/postService\";\n\nexport default function UpdateWritingCard({\n  handleChange,\n  handleSubmit,\n  test,\n  input,\n}) {\n\n  useEffect(() => {\n    test();\n  }, []);\n  \n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await postService.updatePost(input);\n    history.push(`/show/${input.id}`);\n  }\n  \n  return (\n    <>\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Card centered className=\"profileCard\">\n            <h1 className=\"requestsHeader\">Changing your thought?</h1>\n          </Card>\n          <Segment>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Form.TextArea\n                style={{ minHeight: 100 }}\n                className=\"form-control\"\n                name=\"content\"\n                value={input.content}\n                placeholder=\"add post comment\"\n                onChange={handleChange}\n                required\n              />\n              <Button\n                type=\"submit\"\n                className=\"btn\"\n                id=\"addButton\"\n                onClick={handleSubmit}\n              >\n                Update Post\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport postService from \"../../utils/postService\";\n// import \"./UpdateWriting.css\";\nimport UpdatePostCard from \"../../components/UpdatePostCard/UpdatePostCard\";\n\nexport default function UpdateWriting({ user }) {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [post, setPost] = useState({});\n  const [input, setInput] = useState({\n    content: \"\",\n    user: user,\n    id: \"\",\n  });\n\n  async function getPost(id) {\n    setLoading(true);\n    const retrievedPost = await postService.getPost(id);\n    setPost(retrievedPost);\n    setLoading(false);\n  }\n\n  function test() {\n    setInput({\n      content: post.post.comment,\n      id: post.post._id,\n    });\n  }\n\n  useEffect(() => {\n    getPost(id);\n  }, []);\n\n  if (loading) {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"65vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Loader size=\"large\" active>\n            Loading\n          </Loader>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n\n  function handleChange(e) {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <UpdatePostCard handleChange={handleChange} test={test} input={input} />\n  );\n}\n","import React, { useState } from \"react\";\nimport { Redirect, Route, Switch, useHistory, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport ProfilePage from \"../ProfilePage/ProfilePage\";\nimport MainPhoto from \"../MainPhoto/MainPhoto\";\nimport Friends from \"../Friends/Friends\";\nimport Requests from \"../Requests/Requests\";\nimport AddPost from \"../AddPost/AddPost\";\nimport UpdateProfile from \"../UpdateProfile/UpdateProfile\";\nimport userService from \"../../utils/userService\";\nimport tokenService from \"../../utils/tokenService\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport PhotoPostShow from \"../PhotoPostShow/PhotoPostShow\";\nimport AddWriting from \"../AddWriting/AddWriting\";\nimport WritingShow from \"../WritingShow/WritingShow\";\nimport UpdateWriting from \"../UpdateWriting/UpdateWriting\";\nimport MainWriting from \"../MainWriting/MainWriting\";\nimport Home from \"../Home/Home\";\nimport ErrorPage from \"../ErrorPage/ErrorPage\";\nimport UpdatePost from '../UpdatePost/UpdatePost'\n\nfunction App() {\n  const history = useHistory();\n  const [user, setUser] = useState(userService.getUser());\n  const location = useLocation()\n\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser());\n  }\n\n  function handleLogout() {\n    tokenService.removeToken();\n    userService.logout();\n    setUser(null);\n    history.push(\"/login\");\n  }\n\n  return (\n    \n    <div className=\"App\">\n      {location.pathname === '/' ? null :\n      <NavBar\n        user={user}\n        handleSignUpOrLogin={handleSignUpOrLogin}\n        handleLogout={handleLogout}\n      />\n  }\n      <Switch>\n        <Route exact path=\"/login\">\n          <LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />\n        </Route>\n        <Route exact path=\"/\">\n          <Home user={user} />\n        </Route>\n        <Route exact path=\"/404\">\n          <ErrorPage />\n        </Route>\n        {user ? (\n            <Switch>\n              <Route exact path=\"/update\">\n                <UpdateProfile user={user} handleLogout={handleLogout} />\n              </Route>\n              <Route exact path=\"/mainphoto\">\n                <MainPhoto user={user} handleLogout={handleLogout} />\n              </Route>\n              <Route exact path=\"/mainwriting\">\n                <MainWriting user={user} handleLogout={handleLogout} />\n              </Route>\n              <Route exact path=\"/friends\">\n                <Friends\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/requests\">\n                <Requests\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/addpost\">\n                <AddPost\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/addwriting\">\n                <AddWriting\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/updatewriting/:id\">\n                <UpdateWriting\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/updatepost/:id\">\n                <UpdatePost\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route path=\"/show/:id\">\n                <PhotoPostShow\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route path=\"/writing/:id\">\n                <WritingShow\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n              <Route exact path=\"/:username\">\n                <ProfilePage\n                  user={user}\n                  handleLogout={handleLogout}\n                  handleSignUpOrLogin={handleSignUpOrLogin}\n                />\n              </Route>\n            </Switch>\n        ) : (\n          <Redirect to=\"/\" />\n        )}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}